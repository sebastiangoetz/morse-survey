@INPROCEEDINGS{7965406,
  author={Ciccozzi, Federico and Di Ruscio, Davide and Malavolta, Ivano and Pelliccione, Patrizio and Tumova, Jana},
  booktitle={2017 IEEE/ACM 39th International Conference on Software Engineering Companion (ICSE-C)}, 
  title={Engineering the software of robotic systems}, 
  year={2017},
  volume={},
  number={},
  pages={507-508},
  abstract={The production of software for robotic systems is often case-specific, without fully following established engineering approaches. Systematic approaches, methods, models, and tools are pivotal for the creation of robotic systems for real-world applications and turn-key solutions. Well-defined (software) engineering approaches are considered the "make or break" factor in the development of complex robotic systems. The shift towards well-defined engineering approaches will stimulate component supply-chains and significantly reshape the robotics marketplace. The goal of this technical briefing is to provide an overview on the state of the art and practice concerning solutions and open challenges in the engineering of software required to develop and manage robotic systems. Model-Driven Engineering (MDE) is discussed as a promising technology to raise the level of abstraction, promote reuse, facilitate integration, boost automation and promote early analysis in such a complex domain.},
  keywords={},
  doi={10.1109/ICSE-C.2017.167},
  ISSN={},
  month={May},}@INPROCEEDINGS{6826184,
  author={von Schwerin, Marianne},
  booktitle={2014 IEEE Global Engineering Education Conference (EDUCON)}, 
  title={Software engineering in a nutshell for Electrical Engineering students}, 
  year={2014},
  volume={},
  number={},
  pages={788-793},
  abstract={Nearly all electrical engineers develop software or do at least a little programming in their everyday professional life. The curricula of Electrical Engineering Bachelor Programs usually include only little time for acquiring software engineering skills. Therefore, in this contribution a concept for a compact course is introduced which includes the main topics of software engineering and focuses on the software development skills which are usually expected from an engineer. The course is based on software modeling using UML, deployment of design patterns, code generation especially for embedded systems and using model driven architecture principles. This basic knowledge is applied to a programming project in robotics. Starting with a Lego NXT robot - without Lego softwarethe ARM 7 processor is addressed directly by the developed software. Beginning with a Platform Independent Model, the students design the system in UML using an appropriate tool. A Transformation Description Model and a Platform Description Model are provided so that the executable system can be generated. Profiles for real-time systems may be included in order to consider the real-time requirements. The project should apply a particular process model e.g. a simple VModel so that the students get used to realizing software projects using a process framework. The course including the lab can be taught in e.g. 12 weeks with 4 teaching hours per week.},
  keywords={},
  doi={10.1109/EDUCON.2014.6826184},
  ISSN={2165-9567},
  month={April},}@INPROCEEDINGS{7964337,
  author={Ringert, Jan Oliver and Rumpe, Bernhard and Schulze, Christoph and Wortmann, Andreas},
  booktitle={2017 IEEE/ACM 39th International Conference on Software Engineering: Software Engineering Education and Training Track (ICSE-SEET)}, 
  title={Teaching agile model-driven engineering for cyber-physical systems}, 
  year={2017},
  volume={},
  number={},
  pages={127-136},
  abstract={Agile development methods, model-driven engineering, and cyber-physical systems are important topics in software engineering education. It is not obvious how to teach their combination while respecting individual challenges posed to students and educators. We have devised a software project class for teaching the agile MDE for CPS. The project class was held in three different semesters. In this paper, we report on the setup of our exploratory study and its goals for teaching. We base our evaluation and insights on interviews and questionnaires. Our results show the feasibility of combination of agile MDE for CPS but also the challenges this combination poses to students and educators.},
  keywords={},
  doi={10.1109/ICSE-SEET.2017.16},
  ISSN={},
  month={May},}@ARTICLE{4799444,
  author={Iborra, Andres and Caceres, Diego Alonso and Ortiz, Francisco J. and Franco, Juan Pastor and Palma, Pedro Sanchez and Alvarez, Barbara},
  journal={IEEE Robotics & Automation Magazine}, 
  title={Design of service robots}, 
  year={2009},
  volume={16},
  number={1},
  pages={24-33},
  abstract={This article relates our experiences over the last 15 years in the development of robotic applications within the field of service robotics, using the techniques proposed by software engineering. The process began with domain engineering and reference architectures, moved on to component-oriented development, and currently centered on model-driven design. One of the key problems in software development for robotic systems is that the possibilities of reusing software in new applications are frequently limited. This means that we are forced over and over to solve the same problems starting practically from zero every time. The possible causes of this include the following: 1) robotics specialists normally concentrate more on developing algorithms and the way to solve concrete problems than on organizing the software; 2) lack of good standards for the development of robotic software and implementations of these standards; 3) the case studies conducted to demonstrate the viability of software engineering techniques traditionally deal with information management systems; and 4) the robotics community see software engineering not as a solution but as another problem that adds complexity to already complex problems. This research has helped to demonstrate the viability of using software engineering techniques in real industrial applications, albeit using academic tools that cannot readily be accepted by industry.},
  keywords={},
  doi={10.1109/MRA.2008.931635},
  ISSN={1558-223X},
  month={March},}@INPROCEEDINGS{6867554,
  author={Ramaswamy, Arunkumar and Monsuez, Bruno and Tapus, Adriana},
  booktitle={2014 International Conference on Collaboration Technologies and Systems (CTS)}, 
  title={SafeRobots: A model-driven approach for designing robotic software architectures}, 
  year={2014},
  volume={},
  number={},
  pages={131-134},
  abstract={In this paper, a model-based framework called `Self Adaptive Framework for Robotic Systems (SafeRobots)' for designing robotic software architectures is proposed. With the help of an example of designing an architecture for mobile robot mapping system, it will be shown how formal domain knowledge can be used at multiple abstraction levels in a model-driven engineering approach. The solution pool for a particular problem is modeled using Solution Space Modeling Language. An eclipse based tool-suite is developed for modeling the solution space and for deriving a concrete operational model by explicitly defining the non-functional properties of the constituent components.},
  keywords={},
  doi={10.1109/CTS.2014.6867554},
  ISSN={},
  month={May},}@INPROCEEDINGS{10190431,
  author={Daubaris, Paulius and Helovuo, Juhana and Mäkitalo, Niko},
  booktitle={2023 IEEE/ACM 5th International Workshop on Robotics Software Engineering (RoSE)}, 
  title={Augmenting Robot Software Development Process with Flexbot}, 
  year={2023},
  volume={},
  number={},
  pages={69-72},
  abstract={Robot Operating System (ROS) and its successor ROS2 have significantly improved the state-of-the-art robot software development process. However, even with all the amenities offered by ROS2 to ease the development, research has shown that practitioners still encounter development issues making software a significant bottleneck. Therefore, in this paper, we discuss ROS-based software development challenges encountered during the development and identified in the existing literature, and introduce the new Flexbot framework that seeks to mitigate some of the identified challenges using model-driven engineering (MDE).},
  keywords={},
  doi={10.1109/RoSE59155.2023.00015},
  ISSN={},
  month={May},}@INPROCEEDINGS{9699978,
  author={Nagrath, Vineet and Schlegel, Christian},
  booktitle={2021 Fifth IEEE International Conference on Robotic Computing (IRC)}, 
  title={Model-Driven Run-Time Dependency Graphs for Component-Based Robotic Software}, 
  year={2021},
  volume={},
  number={},
  pages={137-142},
  abstract={For the observance of a system’s non-functional properties, one must first parameterise them as elemental or compound objects. Dependency objects are defined as entities that encapsulate a distinct system characteristic that is relevant to and is altered by components and connections that compose the system. Software components and network connections form nodes of a graph, edges of which represent a change of one or more system-wide properties. Dependency graphs are networks of dependencies that emerge from the flow of system-level characteristics, controlled by evidence and business logic. Component developers and network experts provide functional units to describe how the value of a particular dependency object is transferred across computational or connection nodes respectively. Run-time dependency graph models for independently developed software components and network connections are integrated, built and explored while building or validating a system. These run-time models are used to observe networks of dependencies that emerge from the flow of system-level features graphically and programmatically. The design and engineering anatomy of such a toolchain is presented in this paper.},
  keywords={},
  doi={10.1109/IRC52146.2021.00033},
  ISSN={},
  month={Nov},}@INPROCEEDINGS{8449613,
  author={Menghi, Claudio and Tsigkanos, Christos and Berger, Thorsten and Pelliccione, Patrizio and Ghezzi, Carlo},
  booktitle={2018 IEEE/ACM 40th International Conference on Software Engineering: Companion (ICSE-Companion)}, 
  title={Poster: Property Specification Patterns for Robotic Missions}, 
  year={2018},
  volume={},
  number={},
  pages={434-435},
  abstract={Engineering dependable software for mobile robots is becoming increasingly important. A core asset in engineering mobile robots is the mission specification-a formal description of the goals that mobile robots shall achieve. Such mission specifications are used, among others, to synthesize, verify, simulate, or guide the engineering of robot software. Development of precise mission specifications is challenging. Engineers need to translate the mission requirements into specification structures expressed in a logical language-a laborious and error-prone task. To mitigate this problem, we present a catalog of mission specification patterns for mobile robots. Our focus is on robot movement, one of the most prominent and recurrent specification problems for mobile robots. Our catalog maps common mission specification problems to recurrent solutions, which we provide as templates that can be used by engineers. The patterns are the result of analyzing missions extracted from the literature. For each pattern, we describe usage intent, known uses, relationships to other patterns, and-most importantly-a template representing the solution as a logical formula in temporal logic. Our specification patterns constitute reusable building blocks that can be used by engineers to create complex mission specifications while reducing specification mistakes. We believe that our patterns support researchers working on tool support and techniques to synthesize and verify mission specifications, and language designers creating rich domain-specific languages for mobile robots, incorporating our patterns as language concepts.},
  keywords={},
  doi={},
  ISSN={2574-1934},
  month={May},}@INPROCEEDINGS{4148893,
  author={Jorges, Sven and Kubczak, Christian and Pageau, Felix and Margaria, Tiziana},
  booktitle={Fourth IEEE International Workshop on Engineering of Autonomic and Autonomous Systems (EASe'07)}, 
  title={Model Driven Design of Reliable Robot Control Programs Using the jABC}, 
  year={2007},
  volume={},
  number={},
  pages={137-148},
  abstract={Developing robot control applications is a software engineering domain that still relies on low-level development tools with limited testing capabilities. The Java Application Building Center (jABC), a framework for model-based application development that supports the modelling process of service-oriented software applications, on the contrary offers a number of early error detection mechanisms like animation, analysis, simulation, and formal verification. We investigate the adequacy of jABC to model, verify and implement robot control applications in a model driven paradigm, and aim at addressing the design of software for autonomous robots for space missions later on. Being able to model and verify their reconfiguration behaviour before launching them is of central importance there. We developed a proof-of-concept application that controls a Lego® Mindstorms™ robot which finds its way through a maze. As this maze may change dynamically, the robot must be capable of reacting and adjusting its behaviour. This application was completely modelled, verified, and generated with the jABC.},
  keywords={},
  doi={10.1109/EASE.2007.17},
  ISSN={},
  month={March},}@INPROCEEDINGS{5170421,
  author={Kim, Woo Yeol and Son, Hyun Seung and Kim, R. Young Chul and Carlson, C.R.},
  booktitle={2009 WRI World Congress on Computer Science and Information Engineering}, 
  title={MDD Based CASE Tool for Modeling Heterogeneous Multi-jointed Robots}, 
  year={2009},
  volume={7},
  number={},
  pages={775-779},
  abstract={In this paper, we develop MDD based case tool for modeling heterogeneous multi-jointed robots. This automatic tool consists of the whole procedure from design to implementation based on our extended UML, which automatically generates heterogeneous models. We also add pre-simulation step in this tool for making an accurate estimate of multi-jointed robotpsilas motions before developing it.},
  keywords={},
  doi={10.1109/CSIE.2009.998},
  ISSN={},
  month={March},}@INPROCEEDINGS{8445815,
  author={Burgueño, Loli and Mayerhofer, Tanja and Wimmer, Manuel and Vallecillo, Antonio},
  booktitle={2018 IEEE/ACM 1st International Workshop on Robotics Software Engineering (RoSE)}, 
  title={Using Physical Quantities in Robot Software Models}, 
  year={2018},
  volume={},
  number={},
  pages={23-28},
  abstract={One of the challenges of modeling any software application that deals with real-world physical systems resides in the correct representation of numerical values and their units. This paper shows how both measurement uncertainty and units can be effectively incorporated into software models, becoming part of their basic type systems, and illustrates this approach in the particular case of a robot language. We show how our approach allows robot modelers to safely represent and manipulate units and measurement uncertainties of the robots and their elements in a natural manner, statically ensuring unit-safe assignments and operations, as well as the propagation of uncertainty in the computations of derived attributes and operations.},
  keywords={},
  doi={},
  ISSN={},
  month={May},}@INPROCEEDINGS{9058620,
  author={Di Maio, Marco and Atorf, Linus and Dahmen, Ulrich and Schluse, Michael and Rossmann, Juergen and Hoppe, Martin and Kapos, George-Dimitrios},
  booktitle={2018 IEEE International Systems Engineering Symposium (ISSE)}, 
  title={Interface Management with Closed-Loop Systems Engineering (CLOSE)}, 
  year={2018},
  volume={},
  number={},
  pages={1-8},
  abstract={Interfaces (IF) and their Management (IFM) are a particular challenge in the successful development of complex products and products operating in a complex environment. In Closed-Loop Systems Engineering (CLOSE) IFM is fully integrated into its Model-Driven Engineering Process (MDEP). CLOSE provides fully automated IF modelling, traceable IF history, an efficient handling of IF negotiations and the effective de-coupling of interfacing systems. Especially in combination with CLOSE's Experimentable Digital Twins (EDTs), IFM becomes a vital resource for the development process, rather than the parallel process it so often is today, supporting early variant evaluation, balance checks and impact analysis, which makes it a central asset for developing better products. This paper describes IFM in CLOSE and illustrates it with a case study of a Martian robot for autonomous scientific missions.},
  keywords={},
  doi={10.1109/ISSE43632.2018.9058620},
  ISSN={},
  month={Oct},}@INPROCEEDINGS{4813613,
  author={Son, Hyun Seung and Kim, Woo Yeol and Kim, Robert Young Chul},
  booktitle={2008 Second International Conference on Future Generation Communication and Networking Symposia}, 
  title={Semi-automatic Software Development Based on MDD for Heterogeneous Multi-joint Robots}, 
  year={2008},
  volume={4},
  number={},
  pages={93-98},
  abstract={It might be necessary to develop the multi-joint robots that can work very dedicated movable like a kind of unmanned ground vehicles on very complicated and hazardous environments. These typed robots might be difficultly so controlled and developed that they should control plenty of servo-motors and also diverse hardware. It will be very hard to reuse the software source codes associated with these own robots, much less for heterogeneous ones. It is very difficult to develop heterogeneous multi-joint robots. So we propose the semi-automatic software development based on MDD (model driven development) for heterogeneous multi-joint robots.},
  keywords={},
  doi={10.1109/FGCNS.2008.132},
  ISSN={},
  month={Dec},}@INPROCEEDINGS{5279990,
  author={Ying, Zou and Tianmiao, Wang and Hongxing, Wei and Chengcheng, Li and Shiyi, Li},
  booktitle={2009 15th IEEE International Conference on Embedded and Real-Time Computing Systems and Applications}, 
  title={F-Model: Model of Modular Robot Based on Functional Component}, 
  year={2009},
  volume={},
  number={},
  pages={91-96},
  abstract={With the rapid development of robot technology, It is becoming increasingly difficult to design and maintain robot systems. This makes it necessary to reuse hardware and software modules to lower the difficulty and the cost for the robot system design. In this paper we present a model of modular robot-F-Model. It uses functional component modules to construct function-oriented robot applications. Firstly the background of modular robot system is analyzed, and several basic conceptions in F-Model are elaborated. Then, the main framework of the model is constructed, and the model of functional component and its property are introduced to make a more in-depth description of the framework. Finally, the feasibility of F-Model is established by a simple instance.},
  keywords={},
  doi={10.1109/RTCSA.2009.17},
  ISSN={2325-1301},
  month={Aug},}@INPROCEEDINGS{7169735,
  author={Buchmann, Thomas and Baumgartl, Johannes and Henrich, Dominik and Westfechtel, Bernhard},
  booktitle={2015 IEEE/ACM 5th International Workshop on Product Line Approaches in Software Engineering}, 
  title={Robots and their Variability -- A Societal Challenge and a Potential Solution}, 
  year={2015},
  volume={},
  number={},
  pages={27-30},
  abstract={A robot is essentially a real-time, distributed embedded system operating in a physical environment. Often, control and communication paths within the system are tightly coupled to the actual hardware configuration of the robot. Furthermore, the domain contains a high amount of variability on different levels, ranging from hardware, over software to the environment in which the robot is operated. Today, special robots are used in households to perform monotonous and recurring tasks like vacuuming or mowing the lawn. In the future there may be robots that can be configured and programmed for more complicated tasks, like washing dishes or cleaning up or to assist elderly people. Nowadays, programming a robot is a highly complex and challenging task, which can be carried out only by programmers with dedicated background in robotics. Societal acceptance of robots can only be achieved, if they are easy to program. In this paper we present our approach to provide customized programming environments enabling programmers without background knowledge in robotics to specify robot programs. Our solution was realized using product line techniques.},
  keywords={},
  doi={10.1109/PLEASE.2015.15},
  ISSN={},
  month={May},}@INPROCEEDINGS{6696493,
  author={Yakymets, N. and Dhouib, S. and Jaber, H. and Lanusse, A.},
  booktitle={2013 IEEE/RSJ International Conference on Intelligent Robots and Systems}, 
  title={Model-driven safety assessment of robotic systems}, 
  year={2013},
  volume={},
  number={},
  pages={1137-1142},
  abstract={Robotic systems (RSs) are often used for performing critical tasks with little or no human intervention. Such RSs must satisfy certain dependability requirements including reliability, availability, security and safety. In this paper, we focus on the safety aspect and propose a methodology and associated framework for safety assessment of RSs in the early phases of development. The methodology relies upon model-driven engineering approach and describes a preliminary safety assessment of safety-critical RSs using fault tree (FT) analysis (FTA). The framework supports a domain specific language for RSs called RobotML and includes facilities (i) to automatically generate or manually construct FTs and perform both qualitative and quantitative FTA, (ii) to make semantic connections with formal verification and FTA tools, (iii) to represent FTA results in the RobotML modeling environment. In the case study, we illustrate the proposed methodology and framework by considering a mobile robot developed in the scope of the Proteus project.},
  keywords={},
  doi={10.1109/IROS.2013.6696493},
  ISSN={2153-0866},
  month={Nov},}@INPROCEEDINGS{8542516,
  author={Ramaswamy, Arunkumar and Monsuez, Bruno and Tapus, Adriana},
  booktitle={2014 9th ACM/IEEE International Conference on Human-Robot Interaction (HRI)}, 
  title={Model Driven Software Development for Human-Machine Interaction Systems}, 
  year={2014},
  volume={},
  number={},
  pages={270-271},
  abstract={In a typical Human-Machine Interaction (HMI) system, a task is performed by cooperation of the human and the automation component. The system adopts a cognitive architecture to model human psychology and makes optimum decisions on dynamic task allocation between human and the machine counterpart depending on the context. However, such architectures do not define how those systems are implemented in software. Various models involved in Model Driven Software Development (MDSD) approach in developing HMI systems is presented. This paper proposes a metamodel for modeling Non-Functional Properties (NFP) in HMI systems and provides a case study on assistive lane keeping in automobiles to demonstrate the approach.},
  keywords={},
  doi={},
  ISSN={2167-2121},
  month={March},}@INPROCEEDINGS{8823683,
  author={Gerasimou, Simos and Matragkas, Nicholas and Calinescu, Radu},
  booktitle={2019 IEEE/ACM 2nd International Workshop on Robotics Software Engineering (RoSE)}, 
  title={Towards Systematic Engineering of Collaborative Heterogeneous Robotic Systems}, 
  year={2019},
  volume={},
  number={},
  pages={25-28},
  abstract={Collaborative heterogeneous robotic systems are distributed and interconnected multi-robot systems whose members can have different capabilities and can perform specialised tasks. Existing engineering processes and tools facilitate the development of various robotic aspects including kinematics, sensing and, architecture, through high-level design and low-level code generation. Although there are several frameworks and middleware, providing infrastructure for the development of single-robot and homogeneous multi-robot applications, there is lack of systematic methods and tools supporting the engineering of heterogeneous multi-robot systems and the analysis of collaborative intelligence. In this paper, we present our vision for a framework that supports the specification of collaborative heterogeneous robotic systems, generation of platform-specific code, and efficient exploration and exercise of collective intelligence algorithms.},
  keywords={},
  doi={10.1109/RoSE.2019.00012},
  ISSN={},
  month={May},}@INPROCEEDINGS{9196470,
  author={Zhao, Wanqi and Aßmann, Uwe},
  booktitle={2020 IEEE International Conference on Autonomic Computing and Self-Organizing Systems Companion (ACSOS-C)}, 
  title={A Deep Domain-Specific Model Framework for Self-Reproducing Robotic Control Systems}, 
  year={2020},
  volume={},
  number={},
  pages={240-242},
  abstract={As robots play more critical roles in diverse and complex scenarios in the real world, monomorphic robots are limited to repeating and rather simple tasks. How to achieve a robust, flexible, and scalable multi-robot system becomes essential research. Model-driven software development (MDSD) provides a sturdy methodology for robotic programming using multilevel domain-specific languages (DSLs). These DSLs lay a solid foundation for the design, integration, and extensibility of robotic applications. In this paper, we propose a deep domain-specific model framework for the self-reproducing robotic control system to escort reliable, versatile tasks of heterogeneous robots.},
  keywords={},
  doi={10.1109/ACSOS-C51401.2020.00067},
  ISSN={},
  month={Aug},}@INPROCEEDINGS{8904507,
  author={Losvik, Daneil Steen and Rutle, Adrian},
  booktitle={2019 ACM/IEEE 22nd International Conference on Model Driven Engineering Languages and Systems Companion (MODELS-C)}, 
  title={A Domain-Specific Language for the Development of Heterogeneous Multi-robot Systems}, 
  year={2019},
  volume={},
  number={},
  pages={549-558},
  abstract={In this paper, we explore how model-driven software engineering can be used in the development of heterogeneous multi-robot systems where we have different robots with different capabilities. Multiple robots can achieve more complex tasks that are impossible to achieve for a single robot alone. We propose a framework where simple actions are used as building blocks to define larger tasks that require multiple robots with different capabilities to achieve. We show how task distribution can be performed in such a system and how the robot operating system can be utilized. We also show how a user interface can be used to define multiple different missions for a team of heterogeneous robots without the need for regeneration of code and redeployment on each robot.},
  keywords={},
  doi={10.1109/MODELS-C.2019.00085},
  ISSN={},
  month={Sep.},}@INPROCEEDINGS{6695706,
  author={Patel, Rajendra and Pons, Roger and Casanelles, Ramon and Weström, Jakob and Andersson, Hans and Wäppling, Daniel and Feng, Xiaolong},
  booktitle={IEEE ISR 2013}, 
  title={Model driven mechatronic design optimization of a linear axis press tending robot}, 
  year={2013},
  volume={},
  number={},
  pages={1-4},
  abstract={One of ABB's solutions for interpress automation is a linear 7th axis robot (ABB IRB 7600FX). The key performance measure of an interpress robot is given in strokes per minute (SPM). Press lines are moving towards increased efficiency in throughput and therefore higher performance of the interpress robots is often demanded by the customer. The target for the design optimization described in this paper is to increase the performance of the IRB 7600FX by 10%. The optimizations and investigations have shown that the IRB7600FX can be optimized to achieve and even exceed the targeted performance. Significant improvement of the cycle time performance can be achieved by software changes and no or small design / hardware changes while sacrificing no or only little of expected lifetime. Ultra-fast performance (>25% increase) can also be achieved with the Linear 7th Axis Robot concept, but would require re-design efforts of the current system.},
  keywords={},
  doi={10.1109/ISR.2013.6695706},
  ISSN={},
  month={Oct},}@INPROCEEDINGS{6473661,
  author={Parada, Abilio G. and de Brisolara, Lisane B.},
  booktitle={2012 Brazilian Symposium on Computing System Engineering}, 
  title={A Model Driven Approach for Android Applications Development}, 
  year={2012},
  volume={},
  number={},
  pages={192-197},
  abstract={The mobile application development industry is increasingly growing up due to the intensive use of applications in mobile devices, most of them running Android Operating System. However, developing applications for mobile platforms demands additional worries such as code efficiency, interaction with device resources, as well as short time-to-market. Model-driven Engineering (MDE) combined with UML, as already used in software engineering, could provide abstraction and automation for mobile software developers. To support that, adequate tools and approaches are required. This paper presents a MDE approach for Android applications development, which includes UML-based modeling and code generation in order to facilitate and accelerate the development of mobile applications.},
  keywords={},
  doi={10.1109/SBESC.2012.44},
  ISSN={2324-7894},
  month={Nov},}@INPROCEEDINGS{9649736,
  author={Wanninger, Constantin and Rossi, Sebastian and Sch&#x00F6;rner, Martin and Hoffmann, Alwin and Poeppel, Alexander and Eymueller, Christian and Reif, Wolfgang},
  booktitle={2021 21st International Conference on Control, Automation and Systems (ICCAS)}, 
  title={ROSSi A Graphical Programming Interface for ROS 2}, 
  year={2021},
  volume={},
  number={},
  pages={255-262},
  abstract={The Robot Operating System (ROS) offers developers a large number of ready-made packages for developing robot programs. The multitude of packages and the different interfaces or adapters is also the reason why ROS projects often tend to become confusing. Concepts of model-driven software development using a domain-specific modeling language could counteract this and at the same time speed up the development process of such projects. This is investigated in this paper by transferring the core concepts from ROS 2 into a graphical programming interface. Elements of established graphical programming tools are compared and approaches from modeling languages such as UML are used to create a novel approach for graphical development of ROS projects. The resulting interface is evaluated through the development of a project built on ROS, and the approach shows promise towards facilitating work with the Robot Operating System.},
  keywords={},
  doi={10.23919/ICCAS52745.2021.9649736},
  ISSN={2642-3901},
  month={Oct},}@INPROCEEDINGS{8495893,
  author={Soriano, Thierry and Pham, Hoang Anh and Ngo, Van Hien},
  booktitle={2018 12th France-Japan and 10th Europe-Asia Congress on Mechatronics}, 
  title={Analysis of coordination modes for multi-UUV based on Model Driven Architecture}, 
  year={2018},
  volume={},
  number={},
  pages={189-194},
  abstract={The aim of the present work is to analyze coordination modes for multiplemultiple unmanned underwater vehicles (UUV) which are an open-source and low-cost platform based on the Model Driven Architecture approach. The medium-term goal should be to transform an existing remote control system into an autonomous control system capable of multiple missions. Specially, we describe the general re-engineering process in the use-case of a coordination of two UUVs. The abstract model is studied and verified based on Matlab/Simulink. Furthermore, we propose a framework, which is able to support the development towards the real platform thanks to Robot Operating System (ROS) middleware and Gazebo simulator.},
  keywords={},
  doi={10.1109/MECATRONICS.2018.8495893},
  ISSN={},
  month={Sep.},}@INPROCEEDINGS{7450811,
  author={Bozhinoski, Darko},
  booktitle={2015 11th International ACM SIGSOFT Conference on Quality of Software Architectures (QoSA)}, 
  title={Managing safety and adaptability in Mobile Multi-Robot systems}, 
  year={2015},
  volume={},
  number={},
  pages={135-140},
  abstract={In order to reduce human involvement in repetitive and dangerous tasks, innovative approaches are increasingly sought and explored. One of these approaches is represented by the Mobile Multi-Robot systems (MMRSs). The introduction of this kind of systems opens a collection of new business and societal opportunities, but also raises many new challenges. Such systems are exposed to various spheres of uncertainty, spanning from software and hardware variability of a single robot to the one associated to mission planning and execution in possibly unforeseeable environments. In this proposal, we aim to identify how to preserve safety while enabling adaptability at run-time in MMRSs. The objective is to provide a modelling framework based on a methodology which explicitly takes into account safety and adaptability properties at run-time. In order to reach our goal, we plan to use Model-driven engineering(MDE) methods and techniques. Motivated from positive results from the application of MDE in other domains (e.g. avionics, automotive and telecommunications) we postulate that many methods used in this methodology are also relevant for MMRSs. With our work, we expect to give a contribution towards the assurance of safety and adaptability properties for MMRSs in a dynamic run-time context.},
  keywords={},
  doi={10.1145/2737182.2737195},
  ISSN={},
  month={May},}

@INPROCEEDINGS{7789849,
  author={Heineck, Tiago and Gonçalves, Enyo and Sousa, Aêda and Oliveira, Marcos and Castro, Jaelson},
  booktitle={2016 X Brazilian Symposium on Software Components, Architectures and Reuse (SBCARS)}, 
  title={Model-Driven Development in Robotics Domain: A Systematic Literature Review}, 
  year={2016},
  volume={},
  number={},
  pages={151-160},
  abstract={Robots are complex agents composed of various sensors and actuators that work together with software to meet specific requirements. The subset of robots that has the ability to interact among them and even with people, through gestures or speaking, is known as Social Robots. Model-Driven Development is a promising paradigm because it promotes the reuse of components and quick code generation with quality. ModelDriven Development has been widely used in the context of Robotics in order to reduce complexity, reduce development effort and reuse of software. Due to these facts, it becomes pertinent the development of a systematic literature review to compile these results. In this paper we investigate how MDD techniques have helped the field of Robotics, therefore a systematic literature review was conducted seeking to identify approaches and their main technical features, as well as the types of specific requirements, behavioral and social issues. We came to conclusion that the existing approaches provide many interesting capabilities, typically by using the component-based development paradigm seeking a higher level of software reuse and facilitating the implementation of systems.},
  keywords={},
  doi={10.1109/SBCARS.2016.12},
  ISSN={},
  month={Sep.},}@INPROCEEDINGS{7733579,
  author={Hua, Yingbing and Zander, Stefan and Bordignon, Mirko and Hein, Björn},
  booktitle={2016 IEEE 21st International Conference on Emerging Technologies and Factory Automation (ETFA)}, 
  title={From AutomationML to ROS: A model-driven approach for software engineering of industrial robotics using ontological reasoning}, 
  year={2016},
  volume={},
  number={},
  pages={1-8},
  abstract={One of the major investment for applying industrial robots in production resides in the software development, which is an interdisciplinary and heterogeneous engineering process. This paper presents a novel model-driven approach that uses AutomationML as modeling framework and ontological reasoning as inference framework for constructing robotic application using Robot Operating System (ROS). We show how different robotic components can be classified and modeled with AutomationML, how these components can be composed together to a production system, and how the AutomationML models can be processed semantically by utilizing Semantic Web technologies and ontological reasoning. By applying model-to-text transformation techniques, executable ROS code can be generated from the models that foster fast prototyping and the reuse of robotic software.},
  keywords={},
  doi={10.1109/ETFA.2016.7733579},
  ISSN={},
  month={Sep.},}@INPROCEEDINGS{9481009,
  author={Stan, Mihai and Borangiu, Theodor and Răileanu, Silviu},
  booktitle={2021 23rd International Conference on Control Systems and Computer Science (CSCS)}, 
  title={Data- and model-driven digital twins for design and logistics control of product distribution}, 
  year={2021},
  volume={},
  number={},
  pages={33-40},
  abstract={Digital control of product-on-pallet distribution is organized on two layers in logistics systems: the low-level local process automation and the supervision and coordination dual logistic execution system. The paper's scientific contribution consists in a holonic control system for multiple robot palletizing cells for product-on-pallet distribution. In this holonic control approach, data-driven digital twins (DT) are created to optimize palletizing schedules, controlled with situation awareness and resource health monitoring. A model-driven DT configuration with embedded simulation faster than real-time is combined with the data-driven DT in a meta-level control scheme offering predictive situation awareness. The paper also presents a pure model-driven DT mock-up of a robot palletizing cell - simulation with software in the loop - in which the actual holonic control system including digital twins and decision making is used in the simulation as it will be deployed in reality. This configuration is used to design the robot palletizing cells, to experiment in limit conditions, to fine tune and validate the robot control solution.},
  keywords={},
  doi={10.1109/CSCS52396.2021.00013},
  ISSN={2379-0482},
  month={May},}@INPROCEEDINGS{9814826,
  author={Blender, Timo and Schlegel, Christian},
  booktitle={2022 IEEE/ACM 4th International Workshop on Robotics Software Engineering (RoSE)}, 
  title={Dynamic Allocation of Service Robot Resources to an Order Picking Task Considering Functional and Non-Functional Properties}, 
  year={2022},
  volume={},
  number={},
  pages={25-32},
  abstract={Industry 4.0 processes have often varying requirements. A service robot and a team of service robots respectively represent a flexible resource. That means, it possesses variability that can possibly be configured in such a way that it is able to fulfill the requirements of industry 4.0 processes. Determining whether that is the case and how that has to happen is an important part of variability management. Based on a model-driven general method for variability management in a robotics software ecosystem, we present here a concrete use case (model) in which we allocate for an order picking task with specific time requirements either a single fitting service robot or a collaboration of two fitting service robots. Relevant properties of the service robots considered are both functional (are the capabilities to execute the tasks available?) as well as non-functional (the desired velocity parameterization while executing the individual navigation sub tasks limited by the respective maximum speed of a service robot).},
  keywords={},
  doi={10.1145/3526071.3527518},
  ISSN={},
  month={May},}@INPROCEEDINGS{8675668,
  author={Hammoudeh Garcia, Nadia and Lüdtke, Mathias and Kortik, Sitar and Kahl, Björn and Bordignon, Mirko},
  booktitle={2019 Third IEEE International Conference on Robotic Computing (IRC)}, 
  title={Bootstrapping MDE Development from ROS Manual Code - Part 1: Metamodeling}, 
  year={2019},
  volume={},
  number={},
  pages={329-336},
  abstract={Ten years after its first release, the Robot Operating System (ROS) is arguably the most popular software framework used to program robots. It achieved such status despite its shortcomings compared to alternatives similarly centered on manual programming and, perhaps surprisingly, to model-driven engineering (MDE) approaches. Based on our experience as users and developers of both ROS and MDE tools, we identified possible ways to leverage the accessibility of ROS and its large software ecosystem, while providing quality assurance measures through selected MDE techniques. After describing our vision on how to combine MDE and manually written code, we present the first technical contribution in this pursuit: a family of three metamodels to respectively model ROS nodes, communication interfaces, and systems composed from subsystems. Such metamodels can be used, through the accompanying Eclipse-based tooling made publicly available, to model ROS systems of arbitrary complexity and generate with correctness guarantees the software artifacts for their composition and deployment. Furthermore, they account for specifications on these aspects by the Object Management Group (OMG), in order to be amenable to hybrid systems coupling ROS and other frameworks. We also report on our experience with a large and complex corpus of ROS software used in a commercially deployed robot (the Care-O-bot 4), to explain the rationale of the presented work, including the shortcomings of standard ROS tools and of previous efforts on ROS modeling.},
  keywords={},
  doi={10.1109/IRC.2019.00060},
  ISSN={},
  month={Feb},}@INPROCEEDINGS{5174736,
  author={Schlegel, Christian and Hassler, Thomas and Lotz, Alex and Steck, Andreas},
  booktitle={2009 International Conference on Advanced Robotics}, 
  title={Robotic software systems: From code-driven to model-driven designs}, 
  year={2009},
  volume={},
  number={},
  pages={1-8},
  abstract={Engineering the software development process in robotics is one of the basic necessities towards industrial-strength service robotic systems. A major challenge is to make the step from code-driven to model-driven systems. This is essential to replace hand-crafted single-unit systems by systems composed out of components with explicitly stated properties. Furthermore, this fosters reuse by separating robotics knowledge from short-cycled implementational technologies. Altogether, this is one but important step towards “able” robots. This paper reports on a practical approach to gain more insights into how a model-driven software approach can be applied to robotics systems.},
  keywords={},
  doi={},
  ISSN={},
  month={June},}@INPROCEEDINGS{6223549,
  author={Xiao, Liang},
  booktitle={2012 International Conference on Systems and Informatics (ICSAI2012)}, 
  title={From adaptive software bahaviour to adaptive robotic bahaviour}, 
  year={2012},
  volume={},
  number={},
  pages={2448-2452},
  abstract={Maintenance accounts for a major cost of software development. The design of software systems from the very beginning phase to achieve adaptive behaviour should, therefore, be recognised of its importance in practice. Adaptive Agent Model (AAM) is aimed towards this end via using Agent-oriented Model-Driven Architecture. Models are derived from requirements and reconfigured continuously by domain experts to reflect changing business needs. Agents interpret these models, at runtime, to choose alternative partners in collaboration or reusable components in computation, in an adaptive manner. Adopting an event-driven architecture at runtime, AAM has its agents and knowledge-based control readily applicable to robots and their on-board control extension. The paper describes work towards this goal and ultimately, this will demonstrate the feasibility of AAM in software adaptivity via the robot platform, and also help to achieve robot adaptivity through corresponding AAM support.},
  keywords={},
  doi={10.1109/ICSAI.2012.6223549},
  ISSN={},
  month={May},}@INPROCEEDINGS{5410445,
  author={Chung, Sam and Won, Daehee and Baeg, Seung-Ho and Park, Sangdeok},
  booktitle={2009 IEEE International Conference on Service-Oriented Computing and Applications (SOCA)}, 
  title={Service-oriented reverse reengineering: 5W1H model-driven re-documentation and candidate services identification}, 
  year={2009},
  volume={},
  number={},
  pages={1-6},
  abstract={The purpose of this paper is to propose a service-oriented reverse reengineering that consists of re-documentation and design recovery. To understand the legacy system, we need to re-document the legacy system in a highlevel abstraction by using UML visual models through an initial reverse engineering. For this re-documentation, we propose a new re-documentation technique called 5W1H (Why, Who, When, Where, What, and How) model-driven re-documentation. Based upon the re-documented software visual model, we attempt to identify the scope of locating the candidate services from a legacy system. To show the feasibility of our approach, two applications using different design methods and architectures are re-documented into visual models. After recovering design methods and architectural patterns from the visual models, which have been injected into source code implicitly or explicitly to bring clear separation of concerns, we locate the scope of candidate services from the legacy system. We can reduce the effort of identifying candidate services by using the visualized model since we can discover highly possible locations for reusable business logic effectively. The service-oriented reverse engineering using 5W1H re-documentation technique will help a service producer to easily discover the candidate services from a legacy system through software re-documentation.},
  keywords={},
  doi={10.1109/SOCA.2009.5410445},
  ISSN={2163-2871},
  month={Jan},}@INPROCEEDINGS{9796464,
  author={Lestingi, Livia and Sbrolli, Cristian and Scarmozzino, Pasquale and Romeo, Giorgio and Bersani, Marcello M. and Rossi, Matteo},
  booktitle={2022 IEEE/ACM 10th International Conference on Formal Methods in Software Engineering (FormaliSE)}, 
  title={Formal Modeling and Verification of Multi-Robot Interactive Scenarios in Service Settings}, 
  year={2022},
  volume={},
  number={},
  pages={80-90},
  abstract={Service robots are increasingly widespread in healthcare and domestic assistance settings. Nevertheless, the literature still lacks robotic application development approaches that can deal with the complexity of multi-agent systems and the unpredictability of human behavior. We target this issue by building upon a model-driven development framework for human-robot interactive scenarios that relies on formal analysis (Statistical Model Checking) to estimate the probability of success of the robotic mission. We extend the framework’s scope to scenarios featuring multi-robot fleets, a broader range of human-robot interaction contingencies, and task handover between robots. We also present an extended model of human behavior to capture interaction patterns implying close contact or competition with the robot. In the latter case, the user can specify alternative mission plans for the robot, depending on the competition outcome. We illustrate the approach’s effectiveness and scalability through a case study from the healthcare setting, featuring multiple mobile robots and humans with diverse physiological characteristics and requesting a broad spectrum of services.},
  keywords={},
  doi={10.1145/3524482.3527653},
  ISSN={2575-5099},
  month={May},}@INPROCEEDINGS{7862379,
  author={Hochgeschwender, Nico and Schneider, Sven and Voos, Holger and Bruyninckx, Herman and Kraetzschmar, Gerhard K.},
  booktitle={2016 IEEE International Conference on Simulation, Modeling, and Programming for Autonomous Robots (SIMPAR)}, 
  title={Graph-based software knowledge: Storage and semantic querying of domain models for run-time adaptation}, 
  year={2016},
  volume={},
  number={},
  pages={83-90},
  abstract={Software development for robots is a knowledge intensive exercise. To capture this knowledge explicitly and formally in the form of various domain models, roboticists have recently employed model-driven engineering (MDE) approaches. However, these models are merely seen as a way to support humans during the robot's software design process. We argue that the robots themselves should be first-class consumers of this knowledge to autonomously adapt their software to the various and changing run-time requirements induced, for instance, by the robot's tasks or environment. Motivated by knowledge-enabled approaches, we address this problem by employing a graph-based knowledge representation that allows us not only to persistently store domain models, but also to formulate powerful queries for the sake of run time adaptation. We have evaluated our approach in an integrated, real-world system using the neo4j graph database and we report some lessons learned. Further, we show that the graph database imposes only little overhead on the system's overall performance.},
  keywords={},
  doi={10.1109/SIMPAR.2016.7862379},
  ISSN={},
  month={Dec},}@INPROCEEDINGS{7064347,
  author={Ben Ghezala, Mohamed Walid and Bouzeghoub, Amel and Leroux, Christophe},
  booktitle={2014 13th International Conference on Control Automation Robotics & Vision (ICARCV)}, 
  title={RSAW: A situation awareness system for autonomous robots}, 
  year={2014},
  volume={},
  number={},
  pages={450-455},
  abstract={Services and technologies are in evolution in order to develop a new generation of robotic systems that might operate in dynamic real-world environments. In this paper, we focus on the ability of robot to understand and to surpass the blocked situations autonomously without operator intervention. Such situations may occur when the robot cannot succeed the current action and cannot move to the next one. We remark that in the literature, the operator has a crucial role consisting in providing all information about the environment and in making interpretations. In this paper, we propose an RSAW (Robot Situation AWareness) system, developed in order to help a robot to surpass a blocked situation and accomplish its goal whilst minimizing the operator intervention. RSAW is a new general system aiming to increase the autonomy of the robot; It is inspired by the notion of Situation Awareness (SA). In fact, RSAW defines a knowledge representation using ontologies and a process in order to surpass a blocked situation. RSAW is designed according to the Model Driven Engineering (MDE) methodology. This choice is done to preserve the generality of our system. This paper focalizes on the process of the RSAW system and the interaction between the process and the knowledge representation. The experimentations conducted in real environment with the Smart Autonomous Majordomo (SAM) robot, have shown the robustness and the efficiency of the proposed system.},
  keywords={},
  doi={10.1109/ICARCV.2014.7064347},
  ISSN={},
  month={Dec},}@INPROCEEDINGS{7018489,
  author={da Silva, Luís Pires and Brito e Abreu, Fernando},
  booktitle={2014 2nd International Conference on Model-Driven Engineering and Software Development (MODELSWARD)}, 
  title={Model-driven GUI generation and navigation for Android BIS apps}, 
  year={2014},
  volume={},
  number={},
  pages={400-407},
  abstract={This paper presents our approach for producing graphical user interfaces (GUIs) for functionally rich business information system (BIS) prototypes, upon a mobile platform. Those prototypes are specified with annotated UML class diagrams. Navigation in the generated GUIs is allowed through the semantic links that match the associations and cardinalities among the conceptual domain entities, as expressed in the model. We start by reviewing the Android scaffolding for producing flexible GUIs for mobile devices. The latter can present rather different displays, in terms of size, orientation and resolution. Then we show how our model-based generative technique allows producing prototypes that match both the Android GUIs requirements, while implementing our model-driven approach for user navigation.},
  keywords={},
  doi={},
  ISSN={},
  month={Jan},}@INPROCEEDINGS{4492406,
  author={Pérez, Jennifer and Ramos, Isidro and Carsí, Jose Ángel},
  booktitle={15th Annual IEEE International Conference and Workshop on the Engineering of Computer Based Systems (ecbs 2008)}, 
  title={Taking Advantage of COTS for Developing Aspect-Oriented Software Architectures}, 
  year={2008},
  volume={},
  number={},
  pages={245-254},
  abstract={Reused software artefacts guarantee their quality and suitable functionality because they have been tested and used before. As a consequence, Commercial Off-The-Shelf (COTS) importation has acquired relevance in the last few years. This paper presents a proposal for integrating COTS into aspect-oriented architectural models that are developed and maintained following the Model-Driven Development (MDD) approach. The proposal is based on the PRISMA approach, which gives complete support to the development of technology-independent, aspect-oriented software architectures. PRISMA integrates COTS into its MDD process to obtain the complete application code automatically. The proposal is illustrated using a case study: a tele-operated robot that has been developed completely using this proposal.},
  keywords={},
  doi={10.1109/ECBS.2008.61},
  ISSN={},
  month={March},}@ARTICLE{8859226,
  author={Menghi, Claudio and Tsigkanos, Christos and Pelliccione, Patrizio and Ghezzi, Carlo and Berger, Thorsten},
  journal={IEEE Transactions on Software Engineering}, 
  title={Specification Patterns for Robotic Missions}, 
  year={2021},
  volume={47},
  number={10},
  pages={2208-2224},
  abstract={Mobile and general-purpose robots increasingly support everyday life, requiring dependable robotics control software. Creating such software mainly amounts to implementing complex behaviors known as missions. Recognizing this need, a large number of domain-specific specification languages has been proposed. These, in addition to traditional logical languages, allow the use of formally specified missions for synthesis, verification, simulation or guiding implementation. For instance, the logical language LTL is commonly used by experts to specify missions as an input for planners, which synthesize a robot's required behavior. Unfortunately, domain-specific languages are usually tied to specific robot models, while logical languages such as LTL are difficult to use by non-experts. We present a catalog of 22 mission specification patterns for mobile robots, together with tooling for instantiating, composing, and compiling the patterns to create mission specifications. The patterns provide solutions for recurrent specification problems; each pattern details the usage intent, known uses, relationships to other patterns, and—most importantly—a template mission specification in temporal logic. Our tooling produces specifications expressed in the temporal logics LTL and CTL to be used by planners, simulators or model checkers. The patterns originate from 245 mission requirements extracted from the robotics literature, and they are evaluated upon a total of 441 real-world mission requirements and 1251 mission specifications. Five of these reflect scenarios defined with two well-known industrial partners developing human-size robots. We further validate our patterns’ correctness with simulators and two different types of real robots.},
  keywords={},
  doi={10.1109/TSE.2019.2945329},
  ISSN={1939-3520},
  month={Oct},}@INPROCEEDINGS{9689848,
  author={Nawaz, Ali and Ur Rehman, Attique and Mohammad Ali, Tahir and Azam, Farooque and Rasheed, Yawar and Waseem Anwar, Muhammad},
  booktitle={2021 16th International Conference on Emerging Technologies (ICET)}, 
  title={A Novel Model Driven Approach for Trajectory-Based Technique of Autonomous Vehicle Route Prediction}, 
  year={2021},
  volume={},
  number={},
  pages={1-6},
  abstract={The autonomous vehicle is one of the significant efforts toward the luxurious life. The process involves several technical difficulties like synchronized communication between different sensors, efficient response time etc. In this regard, route prediction is one of the critical tasks which requires the extensive knowledge of complex concepts due to its real time nature. Although there exist several studies in this area, most of them are focusing on accuracy while ignoring the importance of simplicity. Therefore, the research community is likely to be benefited through a route prediction approach that focuses on simplicity while preserving good level of accuracy. For this purpose, a model-driven approach is proposed in this paper for automating the complex process of trajectory-based route prediction of a fully autonomous vehicle. Particularly, a metamodel which is M2 level Ecore Model of standard meta-object facility is proposed for trajectory- based route prediction. Subsequently, a complete modeling tool is developed using Sirius platform. Finally, Model-to-Text transformations are applied to generate low level Java implementations with simplicity. The validation is performed through real world case study where autonomous vehicle gain data from different sensors and store that data in the cloud for route prediction by applying an autonomous multiple model algorithm. The results are highly encouraging for the efficient route prediction in autonomous vehicle with simplicity.},
  keywords={},
  doi={10.1109/ICET54505.2021.9689848},
  ISSN={},
  month={Dec},}@ARTICLE{5487512,
  author={Sanchez, Pedro and Alonso, Diego and Rosique, Francisca and Alvarez, Barbara and Pastor, Juan A.},
  journal={IEEE Transactions on Computers}, 
  title={Introducing Safety Requirements Traceability Support in Model-Driven Development of Robotic Applications}, 
  year={2011},
  volume={60},
  number={8},
  pages={1059-1071},
  abstract={Requirements traceability is a technique intended to help determine the impact of changes in software design, support their integration, preserve knowledge, and assure the quality and correctness of the overall system. This paper presents an approach that considers traceability of safety requirements in the context of model-driven development of teleoperated services robots. The combination of the model-driven approach with safety requirements traceability makes it possible to construct systems using techniques for automatically identifying, managing, and mitigating risks so that these systems are safe enough to work in a particular environment. To secure the advantages of these mechanisms, we have developed a tool that provides users with traceability reports after applying model transformations. These reports enable developers to determine whether or not all safety requirements have been considered, the impact of changing a safety requirement, and how they are considered both in architectural decisions and code implementations.},
  keywords={},
  doi={10.1109/TC.2010.149},
  ISSN={1557-9956},
  month={Aug},}@INPROCEEDINGS{7203036,
  author={Barnett, Scott and Vasa, Rajesh and Grundy, John},
  booktitle={2015 IEEE/ACM 37th IEEE International Conference on Software Engineering}, 
  title={Bootstrapping Mobile App Development}, 
  year={2015},
  volume={2},
  number={},
  pages={657-660},
  abstract={Modern IDEs provide limited support for developers when starting a new data-driven mobile app. App developers are currently required to write copious amounts of boilerplate code, scripts, organise complex directories, and author actual functionality. Although this scenario is ripe for automation, current tools are yet to address it adequately. In this paper we present RAPPT, a tool that generates the scaffolding of a mobile app based on a high level description specified in a Domain Specific Language (DSL). We demonstrate the feasibility of our approach by an example case study and feedback from a professional development team. Demo at: https://www.youtube.com/watch?v=ffquVgBYpLM.},
  keywords={},
  doi={10.1109/ICSE.2015.216},
  ISSN={1558-1225},
  month={May},}@INPROCEEDINGS{6696915,
  author={Hochgeschwender, Nico and Gherardi, Luca and Shakhirmardanov, Azamat and Kraetzschmar, Gerhard K. and Brugali, Davide and Bruyninckx, Herman},
  booktitle={2013 IEEE/RSJ International Conference on Intelligent Robots and Systems}, 
  title={A model-based approach to software deployment in robotics}, 
  year={2013},
  volume={},
  number={},
  pages={3907-3914},
  abstract={Deploying a complex robot software architecture on real robot systems and getting it to run reliably is a challenging task. We argue that software deployment decisions should be separated as much as possible from the core development of software functionalities. This will make the developed software more independent of a particular hardware architecture (and thus more reusable) and allow it to be deployed more flexibly on a wider variety of robot platforms. This paper presents a domain-specific language (DSL) which supports this idea and demonstrates how the DSL is used in a model-driven engineering-based development process. A practical example of applying the DSL to the development of an application for the KUKA youBot platform is given.},
  keywords={},
  doi={10.1109/IROS.2013.6696915},
  ISSN={2153-0866},
  month={Nov},}@INPROCEEDINGS{6404197,
  author={Broenink, Jan F. and Ni, Yunyun},
  booktitle={2012 International Conference on Embedded Computer Systems (SAMOS)}, 
  title={Model-driven robot-software design using integrated models and co-simulation}, 
  year={2012},
  volume={},
  number={},
  pages={339-344},
  abstract={The work presented here is on a methodology for design of hard real-time embedded control software for robots, i.e. mechatronic products. The behavior of the total robot system (machine, control, software and I/O) is relevant, because the dynamics of the machine influences the robot software. Therefore, we use two appropriate Models of Computation, which represent continuous-time equations for the machine / robot part, and discrete event / discrete time equations for the control software part.},
  keywords={},
  doi={10.1109/SAMOS.2012.6404197},
  ISSN={},
  month={July},}@INPROCEEDINGS{6094782,
  author={Klotzbücher, Markus and Smits, Ruben and Bruyninckx, Herman and De Schutter, Joris},
  booktitle={2011 IEEE/RSJ International Conference on Intelligent Robots and Systems}, 
  title={Reusable hybrid force-velocity controlled motion specifications with executable Domain Specific Languages}, 
  year={2011},
  volume={},
  number={},
  pages={4684-4689},
  abstract={Most of today's robotic task descriptions are designed for a single software and hardware platform and thus can not be reused without modifications. This work follows the meta-model approach of Model Driven Engineering (MDE) to introduce the concepts of Domain Specific Languages (DSL) and of Model Transformations to the domain of hybrid force-velocity controlled robot tasks, as expressed in (i) the Task Frame formalism (TFF), and (ii) a Statechart model representing the discrete coordination between TFF tasks. The result is a representation in MDE's M0, M1, M2 and M3 form, with increasingly robot and software independent representations, that do remain instantaneously executable, except obviously for the M3 metametamodel. The Platform Specific Model information can be added in three steps: (i) the type of the hybrid force-velocity controlled task, (ii) the hardware properties of the robot, tool and sensor, and (iii) the software properties of the applied execution framework. We demonstrate the presented approach by means of an alignment task executed on a Willow Garage PR2 and a KUKA Light Weight Robot (LWR) arm.},
  keywords={},
  doi={10.1109/IROS.2011.6094782},
  ISSN={2153-0866},
  month={Sep.},}@INPROCEEDINGS{5562989,
  author={Zhu, Yi and Huang, Zhiqiu and Cao, Zining and Zhou, Hang and Yuan, Min},
  booktitle={2010 10th International Conference on Quality Software}, 
  title={An MDE Based Approach for Generating Software Architecture Models from Formal Specifications}, 
  year={2010},
  volume={},
  number={},
  pages={373-376},
  abstract={The transformation approaches from requirements specification to software architecture models and requirements traceability are two hot topics, UML-RT is widely used in modeling the software architectures of real-time systems, but UML-RT models are often inaccurate or ambiguous, because they are created from natural language specifications. In order to obtain more accurate UML-RT models, UML-RT models need to be given formal semantics. In this paper we use LOTOS to describe the requirements specification of real-time systems and propose an approach for generating software architecture models from formal specifications by establishing a mechanism for transforming LOTOS specifications into UML-RT models, the UML-RT models generated by this approach can increase the reliability for designing the software architectures of real-time systems.},
  keywords={},
  doi={10.1109/QSIC.2010.13},
  ISSN={2332-662X},
  month={July},}@INPROCEEDINGS{4148882,
  author={Baer, Philipp A. and Reichle, Roland and Zapf, Michael and Weise, Thomas and Geihs, Kurt},
  booktitle={Fourth IEEE International Workshop on Engineering of Autonomic and Autonomous Systems (EASe'07)}, 
  title={A Generative Approach to the Development of Autonomous Robot Software}, 
  year={2007},
  volume={},
  number={},
  pages={43-52},
  abstract={The integration of new or existing software components into established architectures and the ability to deal with heterogeneity are key requirements for middleware and development frameworks for robotic systems. This paper presents SPICA, a software development framework for communication infrastructures of autonomous mobile robots. Utilizing the model-driven software development paradigm, communication and data flow can be defined on an abstract level. For this purpose, domain-specific languages and tools are provided that allow specification and generation of module communication infrastructures for communication between modules along with primitives for data management. The high-level platform-independent specifications are automatically transformed into low-level platform and programming language-specific source code. We illustrate the applicability of our approach with an elaborate example describing the design of a soccer robot architecture that has proven its strength during RoboCup 2006. Our experiences have revealed that SPICA is advantageous for prototyping as well as for building high performance systems},
  keywords={},
  doi={10.1109/EASE.2007.2},
  ISSN={},
  month={March},}@INPROCEEDINGS{5404270,
  author={Chung, Sam and Won, Dae Hee and Baeg, Seung-Ho and Park, Sangdeok},
  booktitle={2009 2nd International Conference on Computer Science and its Applications}, 
  title={A Model-Driven Scrum Process for Service-Oriented Software Reengineering: mScrum4SOSR}, 
  year={2009},
  volume={},
  number={},
  pages={1-8},
  abstract={},
  keywords={},
  doi={10.1109/CSA.2009.5404270},
  ISSN={2159-7049},
  month={Dec},}@ARTICLE{9558756,
  author={Lestingi, Livia and Askarpour, Mehrnoosh and Bersani, Marcello M. and Rossi, Matteo},
  journal={IEEE Access}, 
  title={A Deployment Framework for Formally Verified Human-Robot Interactions}, 
  year={2021},
  volume={9},
  number={},
  pages={136616-136635},
  abstract={In the future, assistive robots will spread to everyday settings and regularly interact with humans. This paper introduces a deployment approach for assistive robotic applications where human-robot interaction is the main element. The deployment infrastructure hinges on a model-to-code transformation technique and a ROS-based middleware layer and enables deployment in real life or simulation in a virtual environment. The approach fits into a model-driven framework for the formal verification of interactive scenarios. At design-time, the application analyst estimates the most likely outcome of the robotic mission through Statistical Model Checking of a Stochastic Hybrid Automata network modeling the scenario. We introduce an innovative approach to convert a specific subset of Stochastic Hybrid Automata into executable code to control the robot and respond to human actions. Deploying or simulating the application allows analysts to validate the results obtained at design time or to refine the formal model based on runs in the real or the virtual scene. The methodology’s effectiveness is tested via simulation of use cases from the healthcare setting, which can significantly benefit from this kind of approach thanks to its innovative features related to human physiology and autonomous behavior.},
  keywords={},
  doi={10.1109/ACCESS.2021.3117852},
  ISSN={2169-3536},
  month={},}@ARTICLE{8425031,
  author={Lee, Kyunghyun and Kim, Taehyoun},
  journal={IEEE Access}, 
  title={UMIICA: A Model-Driven Integrated Development Environment for Industrial Control Applications}, 
  year={2018},
  volume={6},
  number={},
  pages={43290-43301},
  abstract={With the growing complexity of software-based industrial control applications, the demand for reliable software in the industrial control domain has also been increasing. Although the robustness of complex industrial control applications can benefit from formal modeling and verification, there remains a significant gap between formally verified models and real implementation. A model-driven development approach can be a solution to this problem. This paper aims to introduce a full-fledged model-driven integrated development environment, called UMIICA, for developing reliable industrial control applications. For this goal, we first determined the requirements imposed by the model-driven development process of networked industrial control applications. Based on these requirements, we analyzed the problems to be solved and designed the UMIICA tool according to the problem statements. Our proposed UMIICA tool is a full-fledged development environment for better productivity and software quality in our target application domain in that it incorporates whole model-driven development phases with cross-platform support and preserves the verified model behavior on the final implementation. As a case study, we constructed a three-axis cartesian robot testbed and developed an application for the testbed via the UMIICA tool. The evaluation results on our testbed also proved the effectiveness of UMIICA regarding the functional correctness and real-time performance guarantee of the resulting target application.},
  keywords={},
  doi={10.1109/ACCESS.2018.2862944},
  ISSN={2169-3536},
  month={},}

@INPROCEEDINGS{9799984,
  author={Ebert, Sebastian},
  booktitle={2022 International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS)}, 
  title={Safe Adaptation of Cobotic Cells based on Petri Nets}, 
  year={2022},
  volume={},
  number={},
  pages={43-47},
  abstract={Collaborative robotic cells combine human skills with the latest advancements in robotic accuracy and reliability. Cobotic cell parts are distributed and adapt their behavior to changing tasks and environments. The specific missions of cobotic cells, depend on their field of application, but are critical for human safety, which introduces complexity, increasing testing and development effort. Component-based software engineering is used to manage complexity, but ensuring safety and correctness requires verification and validation, which is complex and demanding to re-ensure, when composed behavior changes. This also applies to the widely used middleware Robot Operating System (ROS), where existing approaches only model high level communication or integrate models. Also, verification of cobotic cells must reflect their context-adaptivity, to check safety critical reactions to contexts-changes. To overcome these inhibitors, a model-driven development approach based on Petri nets is proposed, modeling central aspects of ROS-based cobotic cells. By using formal models, the testing effort at development time is reduced, because global behavior remains formally proven, and only local components have to be retested. Within this work, the plans for this model-driven software approach are reported.CCS CONCEPTS• Software and its engineering $\rightarrow$ Petri nets; Model-driven software engineering; Abstraction, modeling and modularity; • Human-centered computing $\rightarrow$ Collaborative interaction.},
  keywords={},
  doi={10.1145/3524844.3528075},
  ISSN={2157-2321},
  month={May},}@INPROCEEDINGS{5394115,
  author={Chung, Sam and Davalos, Sergio and Niiyama, Craig and Won, Daehee and Baeg, Seung-Ho and Park, Sangdeok},
  booktitle={2009 IEEE Asia-Pacific Services Computing Conference (APSCC)}, 
  title={A UML model-driven business process development methodology for a Virtual Enterprise using SOA & ESB}, 
  year={2009},
  volume={},
  number={},
  pages={246-253},
  abstract={The purpose of this paper is to demonstrate how a Virtual Enterprise Integration (VEI) project using Service-Oriented Architecture (SOA) and Enterprise Service Bus (ESB) can be effectively conducted by a virtual team of service brokers. Currently, VEI is accomplished through SOA and ESB using web services and business process engines that execute WSDL and WS-BPEL. To reengineer a Virtual Enterprise (VE) based on one or more legacy components, referred to as a legacy VE, the abstract and concrete parts of the relevant business processes of the VE need to be reverse engineered to a high level of abstraction. To develop new business processes, business process requirements need to be forward engineered into business processes in BPEL. However, service brokers need guidelines for comprehending the operations of the legacy VEs or for understanding the business process requirement. In order to provide clear communication of this information, we propose a UML model driven Business Process Development Methodology (BPDM) called mBPDM. We demonstrate its applicability and capabilities by applying it to two case studies: a loan application process system which involves reverse engineering and Washington State Patrol's Drug Recognition Evaluation system which involves forward engineering. Based upon the results of reverse and forward engineering of two virtual enterprise cases, the guidelines, which use UML as a blueprint with multi-architectural views, help service brokers understand the underlying process architecture and organization of a virtual enterprise that has been built using the SOA concept and the contemporary ESB.},
  keywords={},
  doi={10.1109/APSCC.2009.5394115},
  ISSN={},
  month={Dec},}@INPROCEEDINGS{8802759,
  author={Madala, Kaushik},
  booktitle={2019 IEEE/ACM 41st International Conference on Software Engineering: Companion Proceedings (ICSE-Companion)}, 
  title={An Artificial Intelligence-Based Model-Driven Approach for Exposing Off-Nominal Behaviors}, 
  year={2019},
  volume={},
  number={},
  pages={214-217},
  abstract={With an increase in the automation of cyber-physical systems (e.g., automated vehicles and robots), quality problems such as off-nominal behaviors (ONBs) have also increased. While there are techniques that can find ONBs at the requirements engineering stage as it reduces the cost of addressing defects early in development, they do not meet the current industrial needs and often ignore functional safety. These techniques suffer from limitations such as scalability, need for significant human effort and inability to detect overlooked or unknown ONBs. To address these limitations we need a technique that analyzes requirements with respect to functional safety, but with less human effort. To achieve this, we propose our artificial intelligence-based model-driven methodology that provides a means to find ONBs during requirements engineering with minimal human effort. Our methodology utilizes existing approaches such as causal component model (CCM) and systems theoretic process analysis (STPA). We describe the details of each step of our approach and how our approach would support finding ONBs. Using our research and the results of our studies, we intend to provide empirical evidence that considering ONBs during requirements engineering stage and analyzing requirements with respect to functional safety can help create more robust designs and higher-quality products.},
  keywords={},
  doi={10.1109/ICSE-Companion.2019.00085},
  ISSN={2574-1934},
  month={May},}@INPROCEEDINGS{9212077,
  author={Wehrmeister, Marco Aurelio},
  booktitle={2020 25th IEEE International Conference on Emerging Technologies and Factory Automation (ETFA)}, 
  title={Generating ROS-based Software for Industrial Cyber-Physical Systems from UML/MARTE}, 
  year={2020},
  volume={1},
  number={},
  pages={313-320},
  abstract={This work proposes an approach to generate automatically the embedded software for distributed Cyber-Physical Systems implemented using the Robotic Operating System (ROS) framework. For that, the Aspect-oriented Model Driven Engineering for Real-Time systems (AMoDE-RT) design approach has been extended in order to support the C++ code generation using the semantics and libraries available in ROS framework which is widely used in both academia and industry to implement the embedded software for robotic systems. The system architecture, behavior, requirements and constraints are specified in a UML/MARTE model. The information specified in the high-level model is used as input for a tool that generates a great part of the embedded software for all distributed computing devices. The main goal is to foster the use of Model-Driven Engineering in the context of cyber-physical systems design aiming the rapid prototyping via simulation and also the generation of the actual implementation of the system components. The proposed approach has been validated through a case study that demonstrates the feasibility to implement a ROS/C++ software for industrial systems. The results indicate that the proposed approach can be applied to complex systems comprising a larger number of interacting devices, whereas keeping the high-level of abstraction for system specification in UML/MARTE models.},
  keywords={},
  doi={10.1109/ETFA46521.2020.9212077},
  ISSN={1946-0759},
  month={Sep.},}@INPROCEEDINGS{7167401,
  author={La Manna, Valerio Panzica and Greenyer, Joel and Clun, Donato and Ghezzi, Carlo},
  booktitle={2015 IEEE/ACM 7th International Workshop on Modeling in Software Engineering}, 
  title={Towards Executing Dynamically Updating Finite-State Controllers on a Robot System}, 
  year={2015},
  volume={},
  number={},
  pages={42-47},
  abstract={Modern software systems are increasingly required to run for a long time and deliver uninterrupted service. Their requirements or their environments, however, may change. Therefore, these systems must be updated dynamically, at run-time. Typical examples can be found in manufacturing, transportation, or space applications, where stopping the system to deploy updates can be difficult, costly, or simply not possible. In previous work we proposed a model-driven approach that uses automatically synthesized finite-state controllers from scenario-based assume/guarantee specifications to safely and efficiently dynamically update the system. In this paper we describe an execution infrastructure of this approach, which allows us to execute and deploy newly synthesized dynamically updating controllers on embedded devices. We present a prototype implementation in Java for Lego Mind storms robots. This experience gained can lead to a systematic approach to implement dynamic updates in the aforementioned critical software-intensive systems.},
  keywords={},
  doi={10.1109/MiSE.2015.15},
  ISSN={2156-7891},
  month={May},}@INPROCEEDINGS{6120927,
  author={Boukhanoufa, Mohamed-Lamine and Radermacher, Ansgar and Terrier, Francois},
  booktitle={2011IEEE 10th International Conference on Trust, Security and Privacy in Computing and Communications}, 
  title={Offline Validation of Real-Time Application Constraints Considering Adaptation Rules}, 
  year={2011},
  volume={},
  number={},
  pages={974-980},
  abstract={The requirements of adaptive real-time systems include time constraints. They do not only have to hold during normal operation, but also during reconfiguration. This implies time constraints for adaptation operations, which are executed by a reconfiguration framework. In this paper, we present an off-line verification of these time constraints based on a comparison of the worst-case execution time required for the adaptation with the available time slots in the application schedule. We use a model-driven engineering approach, in which a state machine represents the application configurations and the transitions between these.},
  keywords={},
  doi={10.1109/TrustCom.2011.134},
  ISSN={2324-9013},
  month={Nov},}@INPROCEEDINGS{6549902,
  author={Turner, Jay Thor and Givigi, Sidney N. and Beaulieu, Alain},
  booktitle={2013 IEEE International Systems Conference (SysCon)}, 
  title={Implementation of a subsumption based architecture using model-driven development}, 
  year={2013},
  volume={},
  number={},
  pages={331-338},
  abstract={This paper describes the implementation of a subsumption architecture by using Model Driven Development in a real-time physical platform. The behaviours are implemented as finite state-machines and are guaranteed to be executed in real-time while avoiding deadlocks. The platform used is compatible with Robot Operating System, which is becoming the de facto standard for robotics applications nowadays. The sensors used for supporting the behaviours implemented are a Light Detection and Ranging and an Inertial Measurement Unit. The main contribution of this paper is in experimentally demonstrating a functional implementation, using Model Driven Development, of a multi-layer subsumption based autonomous robotics control. The paper shows, through experimentation, that the implementation of the architecture is reliable and efficient. With the success of the implementation in one platform, future development of subsumption in multiple platforms may be tried.},
  keywords={},
  doi={10.1109/SysCon.2013.6549902},
  ISSN={},
  month={April},}@INPROCEEDINGS{4492416,
  author={Alonso, Diego and Vicente-Chicote, Cristina and Barais, Olivier},
  booktitle={15th Annual IEEE International Conference and Workshop on the Engineering of Computer Based Systems (ecbs 2008)}, 
  title={V3Studio: A Component-Based Architecture Modeling Language}, 
  year={2008},
  volume={},
  number={},
  pages={346-355},
  abstract={Component-based software development (CBSD) has proven to obtain highly reusable, extensible and evolvable designs. This paper presents a model-driven engineering approach to CBSD which revolves around the definition of the V3Studio component-based meta-model and a set of graphical modeling tools implemented to support it. V3Studio has been designed to model the structure and behavior of a wide variety of reactive systems by means of three complementary views, namely: one for describing the components of the architecture (structural view), and two for describing their behavior (coordination and algorithmic views). Dividing the V3Studio meta-model into these three loosely coupled views considerably simplifies the overall design process, allowing designers to reuse previously defined models. In order to show the feasibility and the benefits of the proposal, a simple but complete case study regarding the design of a vision guided robotic system was presented.},
  keywords={},
  doi={10.1109/ECBS.2008.9},
  ISSN={},
  month={March},}@INPROCEEDINGS{4550830,
  author={Goldsby, Heather J. and Cheng, Betty H.C. and McKinley, Philip K. and Knoester, David B. and Ofria, Charles A.},
  booktitle={2008 International Conference on Autonomic Computing}, 
  title={Digital Evolution of Behavioral Models for Autonomic Systems}, 
  year={2008},
  volume={},
  number={},
  pages={87-96},
  abstract={We describe an automated method to generating models of an autonomic system. Specifically, we generate UML state diagrams for a set of interacting objects, including the extension of existing state diagrams to support new behavior. The approach is based on digital evolution, a form of evolutionary computation that enables a designer to explore an enormous solution space for complex problems. In our application of this technology, an evolving population of digital organisms is subjected to natural selection, where organisms are rewarded for generating state diagrams that support key scenarios and satisfy critical properties as specified by the developer. To achieve this capability, we extended the Avida digital evolution platform to enable state diagram generation, and integrated AviDA with third-party software engineering tools, e.g., the Spin model checker, to assess the generated state diagrams. To illustrate this approach, we successfully applied it to the generation of state diagrams describing the autonomous navigation behavior of a humanoid robot.},
  keywords={},
  doi={10.1109/ICAC.2008.26},
  ISSN={},
  month={June},}@INPROCEEDINGS{7320379,
  author={Blech, Jan Olaf and Herrmann, Peter and Peake, Ian and Schmidt, Heinz},
  booktitle={2015 International Conference on Evaluation of Novel Approaches to Software Engineering (ENASE)}, 
  title={Towards a model-based toolchain for remote configuration and maintenance of space-aware systems}, 
  year={2015},
  volume={},
  number={},
  pages={331-336},
  abstract={We present work towards a toolchain that combines our existing tools Reactive Blocks and BeSpaceD with our remote collaboration and visualization facility VxLab. Software development in areas such as oil and gas, mining or automation is subject to remote configuration and maintenance of installations. Different reasons are driving this trend including difficult accessibility of remote sites and outsourcing to offsite experts or due to cheaper labor costs. Here, we concentrate on work towards remote configuration, installation and maintenance of the software controlling these installations and their spatial constraints.},
  keywords={},
  doi={},
  ISSN={},
  month={April},}@INPROCEEDINGS{7733727,
  author={Kchir, Selma and Dhouib, Saadia and Tatibouet, Jérémie and Gradoussoff, Baptiste and Da Silva Simoes, Max},
  booktitle={2016 IEEE 21st International Conference on Emerging Technologies and Factory Automation (ETFA)}, 
  title={RobotML for industrial robots: Design and simulation of manipulation scenarios}, 
  year={2016},
  volume={},
  number={},
  pages={1-8},
  abstract={Robotic systems are a typical example of complex systems. Their design involves a combination of different technologies, requiring a multi-disciplinary approach. This is particularly challenging when a robotic system is required to interact either with humans or other entities within its environment. To tackle this complexity, we propose a design and validation approach based on MDE (Model-Driven Engineering) principles for industrial manipulators. We propose an extension of RobotML for manipulation, a modelling environment based on the Papyrus tool, which was developed specifically for the robotics domain. The extension is aiming to model a complete robotic setting, including protagonists, objects, their properties, the interactions between them, the services provided by the robots, and the actions they can perform. Then we propose to use model execution techniques to validate the design models. We illustrate our approach on a robotic scenario dedicated to the Sybot collaborative robot.},
  keywords={},
  doi={10.1109/ETFA.2016.7733727},
  ISSN={},
  month={Sep.},}@INPROCEEDINGS{7338270,
  author={Lettner, Daniela and Eder, Klaus and Grünbacher, Paul and Prähofer, Herbert},
  booktitle={2015 ACM/IEEE 18th International Conference on Model Driven Engineering Languages and Systems (MODELS)}, 
  title={Feature modeling of two large-scale industrial software systems: Experiences and lessons learned}, 
  year={2015},
  volume={},
  number={},
  pages={386-395},
  abstract={Feature models are frequently used to capture the knowledge about configurable software systems and product lines. However, feature modeling of large-scale systems is challenging as many models are needed for diverse purposes. For instance, feature models can be used to reflect the perspectives of product management, technical solution architecture, or product configuration. Furthermore, models are required at different levels of granularity. Although numerous approaches and tools are available, it remains hard to define the purpose, scope, and granularity of feature models. In this paper we thus present experiences of developing feature models for two large-scale industrial automation software systems. Specifically, we extended an existing feature modeling tool to support models for different purposes and at multiple levels. We report results on the characteristics and modularity of the feature models, including metrics about model dependencies. We further discuss lessons learned during the modeling process.},
  keywords={},
  doi={10.1109/MODELS.2015.7338270},
  ISSN={},
  month={Sep.},}@INPROCEEDINGS{9468864,
  author={Trezzy, Mickaël and Ober, Ileana and Ober, Iulian and Oliveira, Raquel},
  booktitle={2021 IEEE International Workshop of Electronics, Control, Measurement, Signals and their application to Mechatronics (ECMSM)}, 
  title={Leveraging domain specific modeling to increase accessibility of robot programming}, 
  year={2021},
  volume={},
  number={},
  pages={1-9},
  abstract={Despite the popularity of the Robot Operating System (ROS), Model-Driven Engineering (MDE) methods remain not commonly used in the community. The use of such methods would allow to reason at a higher level of abstraction and increase the accessibility of field engineers to effectively write ROS applications, while opening the way to more advanced model analysis for validation and verification. In a previous work, we made an in-depth comparative study to choose which MDE approach to apply when developing ROS applications. This study led us to choose graphical Domain-Specific Languages (DSL) as the means to facilitate the development of ROS applications. In this paper we present the MDE4ROS framework, a graphical DSL we defined to allow high level robotics applications development. This framework aims to provide a better view of the system during the development using a graphical representation and to enable higher level of abstraction with code generation of the ROS system. To illustrate our proposal we use MDE4ROS to develop a TurtleBot use case and we present an analysis of the results.},
  keywords={},
  doi={10.1109/ECMSM51310.2021.9468864},
  ISSN={},
  month={June},}@INPROCEEDINGS{6385526,
  author={Poppa, Florian and Zimmer, Uwe},
  booktitle={2012 IEEE/RSJ International Conference on Intelligent Robots and Systems}, 
  title={RobotUI - A software architecture for modular robotics user interface frameworks}, 
  year={2012},
  volume={},
  number={},
  pages={2571-2576},
  abstract={Modern robotics frameworks are based on modular architectures that enable them to cope with the complexity and diversity of today's robotics applications. The encapsulation of the framework modules is the key to their reuse in various robotics scenarios. Model-driven approaches further simplify the reuse of already implemented and tested modules by enabling developers to model their applications on a higher abstraction level incorporating existing modules [1]. Unfortunately, these features are only present for the implementation of the robot behavior itself, but not for the accompanying user interfaces (UIs). The contributions of this paper are threefold: In a first step we introduce the idea of dedicated robotics UI frameworks which allow the reuse of UIs across robotics frameworks. The paper then presents an architecture for flexible and versatile UI frameworks for robotics applications by investigating and specifying the necessary features for such systems on a platform and programming language independent basis. The introduced ROBOTUI architecture fosters code reuse on the level of self-contained UI modules and enables the user to build new robotics related UIs based on existing UI building blocks. Finally, we present an implementation of the proposed architecture that demonstrates the advantages of a dedicated UI framework and the high level of code reuse achieved by implementing the modular ROBOTUI architecture.},
  keywords={},
  doi={10.1109/IROS.2012.6385526},
  ISSN={2153-0866},
  month={Oct},}@INPROCEEDINGS{10035250,
  author={Podlubne, Ariel and Mey, Johannes and Pertuz, Sergio and Aßmann, Uwe and Göhringer, Diana},
  booktitle={2022 32nd International Conference on Field-Programmable Logic and Applications (FPL)}, 
  title={Model-based Generation of Hardware/Software Architectures for Robotics Systems}, 
  year={2022},
  volume={},
  number={},
  pages={153-159},
  abstract={Robotic systems compute data from multiple sensors to perform several actions (e.g., path planning, object detection). FPGA - based architectures for such systems may consist of several accelerators to process compute-intensive algorithms. Designing and implementing such complex systems tends to be an arduous task. This work proposes a modeling approach to generate architectures for such applications, compliant with existing robotics middlewares (e.g., ROS, ROS2). The challenge is to have a compact, yet expressive description of the system with just enough information to generate all required components and to integrate existing algorithms. This system model must be generalizable, so it is not application-dependent, and it must exploit the benefits of FPGAs over software solutions. Previous work mainly focused on individual accelerators rather than all components involved in a system and their interactions. The proposed approach exploits the advantages of model-driven engineering and model-based code generation to produce all components, i.e., message converters acting as middleware interfaces and wrappers to integrate algorithms. Data type and data flow analysis are performed to derive the necessary information to generate the components and their connections. Solutions to several identified challenges for generating entire systems from such models are evaluated using four different use cases.},
  keywords={},
  doi={10.1109/FPL57034.2022.00034},
  ISSN={1946-1488},
  month={Aug},}@ARTICLE{7576686,
  author={Ciccozzi, Federico and Di Ruscio, Davide and Malavolta, Ivano and Pelliccione, Patrizio},
  journal={IEEE Access}, 
  title={Adopting MDE for Specifying and Executing Civilian Missions of Mobile Multi-Robot Systems}, 
  year={2016},
  volume={4},
  number={},
  pages={6451-6466},
  abstract={Robots are meant to replace humans for a broad variety of everyday tasks, such as environmental monitoring or patrolling large public areas for security assurance. The main focus of researchers and practitioners has been on providing tailored software and hardware solutions for very specific and often complex tasks. On one hand, these solutions show great potential and provide advanced capabilities for solving the specific task. On the other hand, the polarized attention to task-specific solutions makes them hard to reuse, customize, and combine. In this paper we propose a family of domain-specific modeling languages for the specification of civilian missions of mobile multi-robot systems. These missions are meant to be described in terms of models that are: 1) closer to the general problem domain; 2) independent from the underlying technologies; 3) ready to be analyzed, simulated, and executed; and 4) extensible to new application domains, thus opening up the use of robots to even non-technical operators. Moreover, we show the applicability of the proposed family of languages in two real-world application domains: unmanned multicopters and autonomous underwater vehicles.},
  keywords={},
  doi={10.1109/ACCESS.2016.2613642},
  ISSN={2169-3536},
  month={},}@INPROCEEDINGS{8904851,
  author={Rodríguez, Alejandro and Rutle, Adrian and Kristensen, Lars Michael and Durán, Francisco},
  booktitle={2019 ACM/IEEE 22nd International Conference on Model Driven Engineering Languages and Systems Companion (MODELS-C)}, 
  title={A Foundation for the Composition of Multilevel Domain-Specific Languages}, 
  year={2019},
  volume={},
  number={},
  pages={88-97},
  abstract={In this paper, we provide a foundation for the definition and composition of multilevel domain-specific modelling languages. We will introduce modularization techniques such as composition, aggregation and referencing to enhance flexibility and reusability of these languages. To explain this foundation, we use Coloured Petri Nets (CPN) as a paradigmatic case study and define two CPN variants motivated by industrial collaboration projects: one used for the definition of protocols and the other one for robot controllers.},
  keywords={},
  doi={10.1109/MODELS-C.2019.00018},
  ISSN={},
  month={Sep.},}@INPROCEEDINGS{6299227,
  author={Nagy, Istvan and Cleophas, Loek and Brand, Mark van den and Engelen, Luc and Raulea, Liviu and Mithun, Ernest Xavier Lobo},
  booktitle={2012 IEEE 17th International Conference on Engineering of Complex Computer Systems}, 
  title={VPDSL: A DSL for Software in the Loop Simulations Covering Material Flow}, 
  year={2012},
  volume={},
  number={},
  pages={318-327},
  abstract={We present an approach to model hardware configurations of complex manufacturing systems such as ASML's lithography machines. These hardware configurations consist of actuator and sensor elements which are controlled by system software that consists of over 35 million lines of code. To minimize the cost of testing and system integration, software simulators of hardware configurations are used -- acting as virtual hardware platforms on which the real control software can be executed and tested. An important aspect in such simulation and testing is material flow (specifically wafer flow) in the machine. To support the effective and efficient realization of simulators covering material flow, we defined a domain specific language (DSL) for modelling the hardware configurations to be simulated, and used a model-driven engineering approach to generate the software components implementing the simulators. The DSL can be used to specify not only nominal (i.e. good weather) behaviour but also simulation based fault injection scenarios. The overall approach reduces the cost of early hardware-software integration and enables simulating scenarios that cannot be executed on real machines because they are difficult or hazardous to carry out.},
  keywords={},
  doi={10.1109/ICECCS20050.2012.6299227},
  ISSN={},
  month={July},}@INPROCEEDINGS{6200718,
  author={Nagrath, Vineet and Meriaudeau, Fabrice and Malik, Aamir Saeed and Morel, Olivier},
  booktitle={2012 International Conference on Communication Systems and Network Technologies}, 
  title={Agent Relation Charts (ARCs) for Modeling Cloud Based Transactions}, 
  year={2012},
  volume={},
  number={},
  pages={704-709},
  abstract={Software development is the most central challenge in present day robot system development. This challenge is even more demanding in multi robot systems interacting via one or many connectivity clouds. There is a demand for an overall improvement in the way the robotic software development is done today. This demand is even more critical for cloud based multi robot systems. This article describes multi-view agent relation charts which are modeling and specification tools for software development in cloud connected multi agent systems. ARCs are part of a more elaborate model driven approach for cloud connected agents currently being developed by the authors. The model is being built with a focus on the way human transactions takes place. This article also discusses implementational compatibility of ARCs with object oriented programming methodology.},
  keywords={},
  doi={10.1109/CSNT.2012.156},
  ISSN={},
  month={May},}@INPROCEEDINGS{7324220,
  author={Ramaswamy, Arunkumar and Monsuez, Bruno and Tapus, Adriana},
  booktitle={2015 European Conference on Mobile Robots (ECMR)}, 
  title={Model-driven self-adaptation of robotics software using probabilistic approach}, 
  year={2015},
  volume={},
  number={},
  pages={1-6},
  abstract={A typical feature of robotic architectures are its reactivity and self-adaptivity. In practice, this is achieved by context-dependent dynamic invocation of software components in robotic architectures. In this paper, we specifically address how this self-adaptation capability can be formally defined and modeled in an architecture-independent way. We propose a probabilistic approach that facilitates system design and dynamic runtime adaptation satisfying the quality requirements. We also show how such techniques are incorporated in our model-driven framework: Self Adaptive Framework for Robotic Systems.},
  keywords={},
  doi={10.1109/ECMR.2015.7324220},
  ISSN={},
  month={Sep.},}@INPROCEEDINGS{9609115,
  author={Yang, Nan and Cuijpers, Pieter and Schiffelers, Ramon and Lukkien, Johan and Serebrenik, Alexander},
  booktitle={2021 IEEE International Conference on Software Maintenance and Evolution (ICSME)}, 
  title={Logs and models in engineering complex embedded systems}, 
  year={2021},
  volume={},
  number={},
  pages={695-700},
  abstract={Complex embedded systems, such as robotics, automotive and high-tech manufacturing, are hard to maintain due to their complex nature. To advance our understanding of the software engineering practice for complex embedded systems, we conducted a series of empirical studies at ASML, a leading manufacturer of lithography machines for semi-conductor industry. We started with an interview study exploring how developers use execution logs, essential artifacts that capture the runtime behavior of software systems. The empirical insights obtained from this study led us to explore subtopics about model inference from logs, modeling practice and log comparison. Motivated by the observation that developers often manually sketch behavioral models based on logs, we propose a model inference technique that can extract models by combining log analysis, and analysis of a running system under stimuli. As observed in this model inference study, the transition from code to models requires developers to work with a hybrid system which consists of handwritten code and models. We then study modeling practices and the roles of model in such hybrid systems. Particularly, we study why developers violate modeling guidelines, providing implications for researchers and tool builders to support developers in modeling complex embedded systems. Another interesting observation from the interview study is that developers face challenges in comparing multiple logs generated from such systems. We therefore conduct a literature study to provide an overview of the existing techniques and identify the limitations of the existing techniques. In this project, we study logs and models in complex embedded systems, providing tool builders, researchers and practitioners with implications to facilitate log analysis, model inference, modeling practice and log comparison.},
  keywords={},
  doi={10.1109/ICSME52107.2021.00083},
  ISSN={2576-3148},
  month={Sep.},}@INPROCEEDINGS{7353610,
  author={Heim, Robert and Nazari, Pedram Mir Seyed and Ringert, Jan Oliver and Rumpe, Bernhard and Wortmann, Andreas},
  booktitle={2015 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS)}, 
  title={Modeling robot and world interfaces for reusable tasks}, 
  year={2015},
  volume={},
  number={},
  pages={1793-1798},
  abstract={Robotics applications involve robots that perform tasks by interacting with specific worlds. Most applications are intertwined with and tied to fixed robots and worlds. Changes and evolution of a robot or world have an invasive and often unpredictable impact on the application software.},
  keywords={},
  doi={10.1109/IROS.2015.7353610},
  ISSN={},
  month={Sep.},}@ARTICLE{7509640,
  author={Beaulieu, Alain and Givigi, Sidney N. and Ouellet, Dany and Turner, Jay Thor},
  journal={IEEE Systems Journal}, 
  title={Model-Driven Development Architectures to Solve Complex Autonomous Robotics Problems}, 
  year={2018},
  volume={12},
  number={2},
  pages={1404-1413},
  abstract={In this paper, we discuss model-driven development (MDD) and real-time objected oriented software design paradigms to solve two uninhabited autonomous robotics problems. The first problem we analyze is that of a single robot that has strict timing requirements to perform simultaneous localization and mapping. The second problem we analyze is that of a swarming of flocks of various sizes. Both architectures are discussed and compared for the solution of complex robotics problems. The main contribution of this paper is the definition of an MDD methodology for solving robotics problems, its implementation and validation. Results show that the method can guarantee the real-time requirements for the applications.},
  keywords={},
  doi={10.1109/JSYST.2016.2583403},
  ISSN={1937-9234},
  month={June},}@INPROCEEDINGS{7733581,
  author={Awad, Ramez and Heppner, Georg and Roennau, Arne and Bordignon, Mirko},
  booktitle={2016 IEEE 21st International Conference on Emerging Technologies and Factory Automation (ETFA)}, 
  title={ROS engineering workbench based on semantically enriched app models for improved reusability}, 
  year={2016},
  volume={},
  number={},
  pages={1-9},
  abstract={In this work, the ReApp Engineering Workbench and its underlying semantically enriched app models are presented. The usage of a model, which describes the apps functionality, interfaces and other attributes, allows the utilization of engineering tools for code generation and automated testing. Further, it ensures the compatibility of the generated interfaces, which in turn enhances the reusability of the developed apps in larger applications.},
  keywords={},
  doi={10.1109/ETFA.2016.7733581},
  ISSN={},
  month={Sep.},}@INPROCEEDINGS{9226280,
  author={Novacek, Jan and Kühlwein, Arthur and Reiter, Sebastian and Viehl, Alexander and Bringmann, Oliver and Rosenstiel, Wolfgang},
  booktitle={2020 46th Euromicro Conference on Software Engineering and Advanced Applications (SEAA)}, 
  title={Lemons: Leveraging Model-Based Techniques to Enable Non-Intrusive Semantic Enrichment in Wireless Sensor Networks}, 
  year={2020},
  volume={},
  number={},
  pages={561-568},
  abstract={The paper presents an efficient approach to the semantic enrichment of measured sensor data in Wireless Sensor Networks (WSNs), by bridging techniques from Model-driven Software Development (MDSD) and Semantic Web Technology (SWT). Our approach reinforces data interoperability, fostering data sharing and reuse, by utilizing SWT. Model-based and type-agnostic configuration reduces the overall effort for WSN setup and maintenance, which are traditionally complex and time-consuming tasks. The presented approach addresses the problem of large-scale WSN management through the application of SWT in WSN configuration and management without requiring expert knowledge. Additionally, we present a generic architecture and an implementation which is also supplemented by hands-on descriptions of an illustrative use case. Our experimental results demonstrate that our model-based approach provides non-intrusive semantic enrichment with sub-millisecond computational overhead, as well as partially automated configuration of WSNs.},
  keywords={},
  doi={10.1109/SEAA51224.2020.00092},
  ISSN={},
  month={Aug},}

@INPROCEEDINGS{1267906,
  author={Horvath, L. and Rudas, I.J. and Tar, J.K.},
  booktitle={2003 IEEE International Symposium on Industrial Electronics ( Cat. No.03TH8692)}, 
  title={Robot assembly trajectory generation using form feature driven robot process model}, 
  year={2003},
  volume={2},
  number={},
  pages={707-711 vol. 2},
  abstract={Researchers and practitioners have attempted to solve problem of robot control by using of well-proved product models. Existing product modeling methods offer quasi integration because appropriate integrated robot process model is not available. The authors propose a modeling of the robot system that has the capability of integrated description of product, robot and robot process. Advanced concepts as feature and associativity definitions together with task oriented robot process gained an extended application in the proposed model. This paper presents the new modeling for integrated application of part, assembly and robot process models at robot assembly of mechanical products. The main purpose of this integration is product model driven definition of robot assembly trajectories. The main contribution is an attempt to define shapes and part positions for robot assembly by using of form features instead of geometric elements. Form feature model objects carry intent of engineers for technical content of modeled environment. The paper introduces actual issues of robot assembly and outlines the concept of the authors for product model driven modeling of robot assembly. Information for assembly in feature based product model and robot process model features are explained. Following this, an extended feature concept for modeling of robot system is discussed. Finally, integrated model of robot assembly system and role of form features in it are concluded.},
  keywords={},
  doi={10.1109/ISIE.2003.1267906},
  ISSN={},
  month={June},}@INPROCEEDINGS{7926531,
  author={Romano, Francesco and Traversaro, Silvio and Pucci, Daniele and Eljaik, Jorhabib and Del Prete, Andrea and Nori, Francesco},
  booktitle={2017 First IEEE International Conference on Robotic Computing (IRC)}, 
  title={A whole-body software abstraction layer for control design of free-floating mechanical systems}, 
  year={2017},
  volume={},
  number={},
  pages={148-155},
  abstract={In this paper, we propose a software abstraction layer to simplify the design and synthesis of whole-body controllers without making any preliminary assumptions on the control law to be implemented. The main advantage of the proposed library is the decoupling of the control software from implementation details, which are related to the robotic platform. Furthermore, the resulting code is more clean and concise than ad-hoc code, as it focuses only on the implementation of the control law. In addition, we present a reference implementation of the abstraction layer together with a Simulink interface to provide support to Model-Driven based development. We also show the implementation of a simple proportional-derivative plus gravity compensation control together with a more complex momentum-based bipedal balance controller.},
  keywords={},
  doi={10.1109/IRC.2017.43},
  ISSN={},
  month={April},}@INPROCEEDINGS{6722372,
  author={Garcia, A. Sanchez and Estevez, E. and Ortega, J. Gomez and Garcia, J. Gamez},
  booktitle={2013 IEEE International Conference on Systems, Man, and Cybernetics}, 
  title={Component-Based Modelling for Generating Robotic Arm Applications Running under OROCOS Middleware}, 
  year={2013},
  volume={},
  number={},
  pages={3633-3638},
  abstract={Nowadays, complex dynamic systems, such as robotics, demand new and highly sophisticated software developments. But, basically, robotics arm applications need to get information, through sensors, from the variant and unknown environment, this is available to controllers which also have information about the robot's state (position, velocity, acceleration, torque, etcetera) and taking into account a reference, they generate the next state for the robot. Therefore, every robotic platform should require a set of sensors to take information from the environment, controllers and robots (with the low level controller). In order to cope with devices, which part of them exhibit vendor-dependent characteristics, a standard interface is proposed to allow the designers to abstract the vendor specific drivers' knowledge and to guide them in this work. This paper also explores the advantages of model-based techniques to design robotic-arm applications. In particular the Unified Modelling Language has been used for modelling the functionality in the robotic's manipulator applications, from where components of the OROCOS (Open RObot COntrol Software) are automatically generated. The proposition, characterized by its openness, productivity, portability and interoperability, is based on the construction of a complex robotic manipulator platform that integrates a Staubli industrial robot and a MEKA anthropomorphic robotic arm. Both can be used, in an easy way, in advanced experiments as it is shown in the results.},
  keywords={},
  doi={10.1109/SMC.2013.619},
  ISSN={1062-922X},
  month={Oct},}@INPROCEEDINGS{5990005,
  author={Ingles-Romero, Juan F. and Vicente-Chicote, Cristina and Morin, Brice and Barais, Olivier},
  booktitle={2011 IEEE 20th International Workshops on Enabling Technologies: Infrastructure for Collaborative Enterprises}, 
  title={Towards the Automatic Generation of Self-Adaptive Robotics Software: An Experience Report}, 
  year={2011},
  volume={},
  number={},
  pages={79-86},
  abstract={This paper reports the progress on a previous work in which we described our experience in using the high-level models provided by the DiVA Framework to design the self-adaptive behavior of autonomous robots. The main objective of this work is to discuss how these models can be translated into a run-time self-adaptive architecture for resource-constrained robots. In order to achieve this goal, the models developed for the case study presented as part of the previous work (based on a Victim-Rescuer scenario) serve as the starting point to manually obtain a self-adaptive component-based architecture, which we have implemented using Cecilia (a C distribution of the Fractal component model) and deployed on two e-pucks (low-cost mobile robotics platform). Through this implementation, we try to identify the generic rules that will allow us to obtain (by means of an automated Model-to-Text transformation) self-adaptive robotics software from the DiVA design-time models. The lessons learned from this experience are reported at the end of the paper, leaving the way open for further improvements on self-adaptive robotics.},
  keywords={},
  doi={10.1109/WETICE.2011.54},
  ISSN={1524-4547},
  month={June},}@INPROCEEDINGS{7828284,
  author={Freitas, Fabiano and Maia, Paulo Henrique Mendes},
  booktitle={2016 VI Brazilian Symposium on Computing Systems Engineering (SBESC)}, 
  title={JustModeling: An MDE Approach to Develop Android Business Applications}, 
  year={2016},
  volume={},
  number={},
  pages={48-55},
  abstract={The continuous growth of the Android market has resulted in greater demand for applications and shorter development cycles. Developers and companies are adopting solutions to increase productivity and reduce development time and effort. Among them, Model-driven Engineering (MDE) has emerged as a concrete alternative to automatically generate Android applications. However, the current MDE propositions generate only part of the application, forcing developers to spend time in implementation tasks. To tackle that, we propose JustModeling, an MDE approach formed by JBModel, a graphical modeling tool with which the user models the application business classes using the UML class diagram and that provides a set of model transformations to generate code for the JustBusiness framework, which automatically generates all necessary resources of the mobile application. This allows developers to work on a higher level of abstraction, focusing on the application design rather than implementation issues. The approach was validated by a case study that showed better results than JustBusiness and the traditional development.},
  keywords={},
  doi={10.1109/SBESC.2016.016},
  ISSN={2324-7894},
  month={Nov},}@INPROCEEDINGS{5980581,
  author={Branco, Kalinka R. L. J. C. and Pelizzoni, Jorge Marques and Neris, Luciano Oliveira and Trindade, Onofre and Osório, Fernando Santos and Wolf, Denis Fernando},
  booktitle={2011 IEEE International Conference on Robotics and Automation}, 
  title={Tiriba - a new approach of UAV based on model driven development and multiprocessors}, 
  year={2011},
  volume={},
  number={},
  pages={1-4},
  abstract={This paper presents the technical details of Tiriba, which is a small autonomous electrical airplane used into pre-defined missions and applications such as agricultural and environmental monitoring. This class of aircrafts has taken advantage of the miniaturization of electronic components and modules such as GPS receivers, digital cameras, wireless communication equipment, and other sensors. One of the main components of Tiriba is the autopilot module, which is capable to control the aircraft and keep it in a predefined route. This paper addresses the use of model driven development of the system and its multiprocessor platform to support the four components that compose the UAV control software architecture.},
  keywords={},
  doi={10.1109/ICRA.2011.5980581},
  ISSN={1050-4729},
  month={May},}@INPROCEEDINGS{6942757,
  author={Ramaswamy, Arunkumar and Monsuez, Bruno and Tapus, Adriana},
  booktitle={2014 IEEE/RSJ International Conference on Intelligent Robots and Systems}, 
  title={SafeRobots: A model-driven Framework for developing Robotic Systems}, 
  year={2014},
  volume={},
  number={},
  pages={1517-1524},
  abstract={A robotic system is a software intensive system that is composed of distributed, heterogeneous software components interacting in a highly dynamic, uncertain environment. However, no systematic software development process is followed in robotics research. In this paper, we present the core concepts that drive our framework `Self Adaptive Framework for Robotic Systems (SafeRobots)' for developing software for robotic systems. Two motivating examples are discussed: one discusses a system integration and knowledge representation problem, and the other explicates the issues associated with robotic system development in an industrial scenario. We also report on our progress on designing a meta-model based language - Solution Space Modeling Language, for problem-specific knowledge representation.},
  keywords={},
  doi={10.1109/IROS.2014.6942757},
  ISSN={2153-0866},
  month={Sep.},}@ARTICLE{7254324,
  author={Brugali, Davide},
  journal={IEEE Robotics & Automation Magazine}, 
  title={Model-Driven Software Engineering in Robotics: Models Are Designed to Use the Relevant Things, Thereby Reducing the Complexity and Cost in the Field of Robotics}, 
  year={2015},
  volume={22},
  number={3},
  pages={155-166},
  abstract={A model is an abstract representation of a real system or phenomenon [1]. The idea of a model is to capture important properties of reality and to eglect irrelevant details. The properties that are relevant and that can be neglected depend on the purpose of creating a model. A model can make a particular system or phenomenon easier to understand, quantify, visualize, simulate, or predict.},
  keywords={},
  doi={10.1109/MRA.2015.2452201},
  ISSN={1558-223X},
  month={Sep.},}@INPROCEEDINGS{9568386,
  author={SENN, Eric and BOURDON, Lucie},
  booktitle={2021 Forum on specification & Design Languages (FDL)}, 
  title={Introducing CPU load Analysis from AADL Models for ROS applications : a use case}, 
  year={2021},
  volume={},
  number={},
  pages={01-08},
  abstract={Robotic software can exhibit low performances even while running on allegedly powerful multi-core processor platforms. To find why is essential to guarantee the success of a mission. This paper presents an approach to analyze the processing resource demand of a ROS (Robotic Operating System) based robotic application. The AADL (Architecture Analysis and Design Language) language is used to model the application software, the hardware, and the deployment of the software components onto the hardware. The analysis of processor loads, and the checking of MIPS demand against MIPS capacity, is done with the OSATE2 tool, thanks to a few properties of the language. To set up those properties, a rapid profiling of the hardware and of the software components of the application is done, based on common Linux performance counting tools. The final accuracy is good enough to allow for a fast verification of the deployment options, and to help thinking or rethinking the software vs hardware architectures.},
  keywords={},
  doi={10.1109/FDL53530.2021.9568386},
  ISSN={1636-9874},
  month={Sep.},}@INPROCEEDINGS{7542927,
  author={Broenink, Jan F. and Vos, Peter-Jan D. and Lu, Zhou and Bezemer, Maarten M.},
  booktitle={2016 11th System of Systems Engineering Conference (SoSE)}, 
  title={A co-design approach for embedded control software of cyber-physical systems}, 
  year={2016},
  volume={},
  number={},
  pages={1-5},
  abstract={This work is about an approach for designing control software for mechatronic and robotic machines. As all system parts (control algorithms, software infrastructure, I/O, and machine) influence each other, its total behaviour needs to be taken into account. Therefore, we use appropriate modelling formalisms, namely discrete event / discrete time for the control software and algorithm part, and differential equations for the machine / robotics part. We combine these two types of models in a co-modelling approach, supporting co-operative design of such cyber-physical systems. In this paper, the co-modelling and co-design approach is elaborated. It consists of four major steps, whereby the models in each are verified via simulation or co-simulation. It is a pure model-driven design approach, implying that all final code is generated from these verified models. This allows for better quality of the resulting embedded software. The method is illustrated using a case study. Structuring models and verification by simulation, whereby relevant simulations are set up such that they can be repeated as real experiments, is beneficial for the design work itself, i.e. making it far more effective and less error-prone.},
  keywords={},
  doi={10.1109/SYSOSE.2016.7542927},
  ISSN={},
  month={June},}@INPROCEEDINGS{7965726,
  author={Thu, Ei Ei and Nwe, Nwe},
  booktitle={2017 IEEE 15th International Conference on Software Engineering Research, Management and Applications (SERA)}, 
  title={Model driven development of mobile applications using drools knowledge-based rule}, 
  year={2017},
  volume={},
  number={},
  pages={179-185},
  abstract={Nowadays, the significance of automatic transformation of object oriented code from design models has increased due to its benefits such as cost reduction and time efficiency. Model driven development (MDD) absolutely needs automatic approach and method to generate system from model. This paper contributes the efficient Drools rule-based transformation approach to automate the mobile application development process. In our approach, the textual model Umple considered as primary artifacts that drive the whole mobile application. The consistency of source and target model and the assessment of transformability are the critical issues in model transformation domain. In this paper, we attempt to address these issues with measuring the accuracy of consistency between source and target model and assessing the transformability using object oriented metrics. Results reveal that our approach achieved the high accuracy of consistency and sound quality of transformability.},
  keywords={},
  doi={10.1109/SERA.2017.7965726},
  ISSN={},
  month={June},}@INPROCEEDINGS{7954418,
  author={Andrews, Anneliese and Abdelgawad, Mahmoud and Gario, Ahmed},
  booktitle={2016 4th International Conference on Model-Driven Engineering and Software Development (MODELSWARD)}, 
  title={World model for testing Urban Search and Rescue (USAR) robots using Petri Nets}, 
  year={2016},
  volume={},
  number={},
  pages={663-670},
  abstract={This paper describes a model-based test generation approach for testing Urban Search and Rescue (USAR) robots interacting with their environment (i.e., world). Unlike other approaches that assume a static world with attributes and values, we present and test a dynamic world. We use Petri Nets to illustrate a world model that describes behaviors of environmental entities (i.e., actors). The Abstract World Behavioral Test Cases (AWBTCs) are generated by covering the active world model using graph coverage criteria. We also select test-data by input-space partitioning to transform the generated AWBTCs into executable test cases. Reachability of the active world model and efficiency of coverage criteria are also discussed.},
  keywords={},
  doi={},
  ISSN={},
  month={Feb},}@INPROCEEDINGS{7487480,
  author={Mühlbacher, Clemens and Gspandl, Stephan and Reip, Michael and Steinbauer, Gerald},
  booktitle={2016 IEEE International Conference on Robotics and Automation (ICRA)}, 
  title={Improving dependability of industrial transport robots using model-based techniques}, 
  year={2016},
  volume={},
  number={},
  pages={3133-3140},
  abstract={When autonomous robots are deployed in an industrial setting they are expected to work 24 hours a day, 7 days a week. Therefore, dependability of the robots is crucial. In this paper we present an approach following the model-driven engineering idea that supports dependability in different stages of the live cycle of robots. In particular we present how model-based testing and diagnosis can be used for this goal and how suitable models for these approaches can be obtained. The proposed approach was evaluated in a real industrial use-case showing superior performance compared to the hand-coded solutions used before.},
  keywords={},
  doi={10.1109/ICRA.2016.7487480},
  ISSN={},
  month={May},}@INPROCEEDINGS{10173959,
  author={Ejersbo, Henrik and Lausdahl, Kenneth and Frasheri, Mirgita and Esterle, Lukas},
  booktitle={2023 IEEE/ACM 18th Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS)}, 
  title={Dynamic Runtime Integration of New Models in Digital Twins}, 
  year={2023},
  volume={},
  number={},
  pages={44-55},
  abstract={The development of cyber-physical systems is heavily relying on model-driven approaches. After deployment, these models can be utilised in a Digital Twin setting, acting as virtual replicas of the physical components and reflecting the behaviour of the running system in real-time. Complex systems often consist of numerous models interacting with each other and individual models may need to be updated after deployment. This means that new models need to be integrated and swapped during runtime without interrupting the running system. In this paper, we propose an approach for model-based Digital Twins to replace individual models without stopping or halting the operation of a cyber-physical system. Furthermore, our approach allows to replace not only individual models, but also update the overall structure of the interaction of models in the Digital Twin setting. The use of the proposed mechanism is illustrated through two case-studies with an agricultural robot prototype.},
  keywords={},
  doi={10.1109/SEAMS59076.2023.00016},
  ISSN={2157-2321},
  month={May},}@INPROCEEDINGS{7954414,
  author={Zribi, Sarah and Calabrò, Antonello and Lonetti, Francesca and Marchetti, Eda and Jorquera, Tom and Lorré, Jean-Pierre},
  booktitle={2016 4th International Conference on Model-Driven Engineering and Software Development (MODELSWARD)}, 
  title={Design of a simulation framework for model-based learning}, 
  year={2016},
  volume={},
  number={},
  pages={631-639},
  abstract={In model-driven learning, simulation of Business Process is a key step for improving the learners's skills and enhancing teaching performance. In this paper, we provide the architectural design and the main functionalities of a model-based learning simulation framework. The main objectives of the proposed framework are: i) enable user-friendly learning simulation with a strong support for collaboration and social interactions; ii) provide a process-driven learning environment that allows emulation of the learner behavior when no learners are available to be involved on the simulation; iii) include event-based monitoring aiming at providing feedbacks for the learner assessment.},
  keywords={},
  doi={},
  ISSN={},
  month={Feb},}@ARTICLE{7857781,
  author={Inglés-Romero, Juan F. and Romero-Garcés, Adrián and Vicente-Chicote, Cristina and Martínez, Jesús},
  journal={IEEE Transactions on Emerging Topics in Computational Intelligence}, 
  title={A Model-Driven Approach to Enable Adaptive QoS in DDS-Based Middleware}, 
  year={2017},
  volume={1},
  number={3},
  pages={176-187},
  abstract={Critical and distributed systems need to be reliable and comply with the required performance at run-time. In this vein, data distribution service for real-time systems (DDS) provides developers with highly configurable middleware to control the end-to-end quality of service (QoS) of the applications through a wide range of attributes. However, dynamic and unpredictable environment pose a major challenge to these systems as their workload and resources may fluctuate significantly in time depending on the execution context. Developers usually find it difficult to choose and apply the right DDS QoS attributes, as once selected, they remain fixed during the whole execution of the system. They do not automatically change according to the execution context, e.g., to meet nonfunctional requirements related to performance or resource consumption. Moreover, changing the QoS attributes at run-time may lead to incompatibilities, since the configuration used by the different participants needs to be mutually consistent. In this paper, we propose a model-driven approach that enables the safe, automatic, and transparent adaptation of the QoS attributes in DDS-based middleware, providing the best performance possible within the available resources at run-time. An example in robotics is presented to demonstrate the feasibility and the benefits of our proposal.},
  keywords={},
  doi={10.1109/TETCI.2017.2669187},
  ISSN={2471-285X},
  month={June},}@INPROCEEDINGS{7926550,
  author={Brugali, Davide and Hochgeschwender, Nico},
  booktitle={2017 First IEEE International Conference on Robotic Computing (IRC)}, 
  title={Managing the Functional Variability of Robotic Perception Systems}, 
  year={2017},
  volume={},
  number={},
  pages={277-283},
  abstract={Control systems for autonomous robots are concurrent, distributed, embedded, real-time and data intensive software systems. A real-world robot control system is composed of tens of software components. For each component providing robotic functionality, tens of different implementations may be available. The difficult challenge in robotic system engineering consists in selecting acoherent set of components, which provide the functionality required by theapplication requirements, taking into account their mutual dependencies. This challenge is exacerbated by the fact that robotics system integrators andapplication developers are usually not specifically trained in softwareengineering. Current approaches to variability management in complex software systemsconsists in explicitly modeling variation points and variants in softwarearchitectures in terms of Feature Models. The novel contribution of this paper is the description of the integration oftwo modeling languages and toolkit, namelyHyperFlex for functional variability modeling and the Robot Perception Specification Language (RPSL), a Domain-specific Language (DSL) enabling domain experts to express the architectural variability of robotperception systems.},
  keywords={},
  doi={10.1109/IRC.2017.20},
  ISSN={},
  month={April},}@INPROCEEDINGS{9326482,
  author={Liu, Yanbo and Shi, Liangren and Xu, Wenchao and Xiong, Xin and Sun, Weiqi and Qu, Ling},
  booktitle={2020 Chinese Automation Congress (CAC)}, 
  title={Design of Driverless Racing Chassis Based on MPC}, 
  year={2020},
  volume={},
  number={},
  pages={6061-6066},
  abstract={Path planning and control logic are the focus of research in Driverless Formula Racing and are key to improving lap times. Vehicle kinematics and dynamics models are designed based on the design parameters of the driverless formula racing vehicle in the competition of Formula Student Autonomous China (FSAC). The path planning is accomplished based on the track data collected by the sensors through the software of OpenLap by using the method of Model Predictive Control (MPC). The established racing dynamics model and path planning strategy are simulated by the Driving Scenario Designer in the Matlab/Simulink and gazebo in the Robot Operating System (ROS) to achieve the unmanned system of design at the decision and executive levels.},
  keywords={},
  doi={10.1109/CAC51589.2020.9326482},
  ISSN={2688-0938},
  month={Nov},}@INPROCEEDINGS{9643622,
  author={Palomés, Xavier Pi i and Tuset-Peiró, Pere and Casas, Pau Fonseca i},
  booktitle={2021 ACM/IEEE International Conference on Model Driven Engineering Languages and Systems Companion (MODELS-C)}, 
  title={Combining Low-Code Programming and SDL-Based Modeling with Snap! in the Industry 4.0 Context}, 
  year={2021},
  volume={},
  number={},
  pages={741-750},
  abstract={One of the main challenges to implement Industry 4.0 technologies within the industrial fabric is the lack of suitable concrete models and tools that demonstrate the potential benefits of embracing the digital transformation process. To overcome this challenge, over the past years, various Industry 4.0 automation and robotics providers have presented solutions based on visual block programming languages, which follow an emerging low-code approach to reduce the entry barriers of digital technologies. However, block-based low-code tools typically lack the formality introduced by specification languages, limiting their ability to model the industrial processes formally. Taking this into account, in this article, we present the combination of specification languages and visual block programming languages to enable industrial users to test and/or build their own Digital Twin models at a suitable abstraction level and with low entry barriers. In particular, we combine SDL and Snap! to create SDL4Snap!, an open-source and web-based tool that facilitates the implementation and validation of Digital Twin prototypes. Overall, the resulting tool has the potential to reduce the entry barrier to Digital Twins in small and medium enterprises, which are part of the late majority and laggard groups regarding the adoption of digital technologies in the context of Industry 4.0.},
  keywords={},
  doi={10.1109/MODELS-C53483.2021.00120},
  ISSN={},
  month={Oct},}@INPROCEEDINGS{7273677,
  author={Han, Fenglin and Blech, Jan Olaf and Herrmann, Peter and Schmidt, Heinz},
  booktitle={2015 IEEE 39th Annual Computer Software and Applications Conference}, 
  title={Model-Based Engineering and Analysis of Space-Aware Systems Communicating via IEEE 802.11}, 
  year={2015},
  volume={2},
  number={},
  pages={638-646},
  abstract={We propose a model-driven development approach for autonomous control systems with emphasis on the physical space and the communication via wireless connections. In particular, we combine model-based engineering with simulation and emulation techniques for mobile communication. The design and implementation is done using our Reactive Blocks Framework. For the mobile communication we use the popular IEEE 802.11 WLAN protocol which is simulated using software tools in order to get estimations of connection delays. The spatial constraints are verified with our Be Spaced tool. As an example, we present the design and verification of autonomous robots performing services in a large factory hall and coordinating by means of wireless communication which is based on several access points.},
  keywords={},
  doi={10.1109/COMPSAC.2015.46},
  ISSN={0730-3157},
  month={July},}@INPROCEEDINGS{7416545,
  author={Kumar, Pranav Srinivas and Emfinger, William and Kulkarni, Amogh and Karsai, Gabor and Watkins, Dexter and Gasser, Benjamin and Ridgewell, Cameron and Anilkumar, Amrutur},
  booktitle={2015 International Symposium on Rapid System Prototyping (RSP)}, 
  title={ROSMOD: a toolsuite for modeling, generating, deploying, and managing distributed real-time component-based software using ROS}, 
  year={2015},
  volume={},
  number={},
  pages={39-45},
  abstract={This paper presents ROSMOD, a model-driven component-based development tool suite for the Robot Operating System (ROS). ROSMOD is well suited for the design, development and deployment of large scale distributed applications on embedded hardware devices. We present the various features of ROSMOD including the modeling language, the graphical user interface, code generators and deployment infrastructure. We describe the utility of this tool with a real-world case study - An Autonomous Ground Support Equipment (AGSE) robot that was designed and prototyped using ROSMOD for the NASA Student Launch competition, 2014-2015.},
  keywords={},
  doi={10.1109/RSP.2015.7416545},
  ISSN={2150-5519},
  month={Oct},}@INPROCEEDINGS{9603431,
  author={Schmidt, Andreas and Reich, Jan and Sorokos, Ioannis},
  booktitle={2021 17th European Dependable Computing Conference (EDCC)}, 
  title={Live in ConSerts: Model-Driven Runtime Safety Assurance on Microcontrollers, Edge, and Cloud Practical Experience Report}, 
  year={2021},
  volume={},
  number={},
  pages={61-66},
  abstract={Engineering highly-integrated Cyber-Physical Systems (CPS) requires dealing with increased complexity and variability, both within the CPS architecture, but also in the dynamic interactions formed with other CPS during operation. Developing, instrumenting, and deploying effective and efficient monitoring is an essential component of any strategy aiming to assure the dependability of CPS. Such runtime monitors use pre-assured knowledge models, which describe safety-relevant properties of the CPS and its environment. During operation, event monitors determine the current situation and thus enable automated safety reasoning based on the modeled knowledge. Conditional Safety Certificates (ConSerts) are a previously introduced concept for safety-related assume-guarantee reasoning models that enable dynamic adaptation of CPS during operation by exploiting dependability assurance established during development. In this work, we introduce a code generation concept and tool support that enables the automatic synthesis of ConSert-based runtime monitors for CPS in the Rust programming language. We demonstrate and evaluate the feasibility of the concept on a robot-assisted industrial manufacturing use case.},
  keywords={},
  doi={10.1109/EDCC53658.2021.00016},
  ISSN={2641-810X},
  month={Sep.},}@INPROCEEDINGS{7203090,
  author={Gherardi, Luca and Hochgeschwender, Nico},
  booktitle={2015 IEEE/ACM 37th IEEE International Conference on Software Engineering}, 
  title={Poster: Model-based Run-time Variability Resolution for Robotic Applications}, 
  year={2015},
  volume={2},
  number={},
  pages={829-830},
  abstract={In this paper we present our ongoing work on Robotics Run-time Adaptation (RRA). RRA is a model-driven approach that addresses robotics runtime adaptation by modeling and resolving run-time variability of robotic applications.},
  keywords={},
  doi={10.1109/ICSE.2015.269},
  ISSN={1558-1225},
  month={May},}@INPROCEEDINGS{7926534,
  author={Wigand, Dennis Leroy and Nordmann, Arne and Goerlich, Michael and Wrede, Sebastian},
  booktitle={2017 First IEEE International Conference on Robotic Computing (IRC)}, 
  title={Modularization of Domain-Specific Languages for Extensible Component-Based Robotic Systems}, 
  year={2017},
  volume={},
  number={},
  pages={164-171},
  abstract={The development of robotics systems requires a coherent design, implementation and integration of multiple domain-specific software artifacts that provide the application-specific capabilities. Model-driven software development (MDSD) provides an efficient methodology enabling the design, integration and verification of robotics applications already at the level of multiple domain-specific models. While the application of MDSD for the engineering of robotics systems is conceptually promising, the interoperability, composability and reusability of developed domain-specific languages and resulting models is challenging. In this paper, we discuss the requirements for language modularization and composition from a robotics perspective and introduce a language composition approach for component-based robotics systems. We utilize a state-of-the-art language workbench supporting reuse, extensibility and refinement of domain-specific languages and code generators. We present and discuss a case study to evaluate the proposed extension and composition approach.},
  keywords={},
  doi={10.1109/IRC.2017.34},
  ISSN={},
  month={April},}@INPROCEEDINGS{5586936,
  author={Hadj kacem, Yessine and Mahfoudhi, Adel and Tmar, Hedi and Abid, Mohamed},
  booktitle={ACS/IEEE International Conference on Computer Systems and Applications - AICCSA 2010}, 
  title={From UML/MARTE to RTDT: A model driven based method for scheduling analysis and HW/SW partitioning}, 
  year={2010},
  volume={},
  number={},
  pages={1-7},
  abstract={Unified Modeling Language (UML) extensions for real time embedded systems (RTES) co-design are taking a growing interest by a great number of industrial and research communities. The extension mechanism is provided by UML profiles for RTES and it aims at improving an easily-understood method of system design for non-experts. One of the key items of the co-design methods is the Hardware/Software partitioning and scheduling tasks. Indeed, it is mandatory to define where and when tasks are implemented and run. Unfortunately, the main goals of co-design are not included in the usual practice of UML profiles. So, there exists a need for mapping used models to an execution platform for both schedulability test and HW/SW partitioning. In the present work, test schedulability and design space exploration are performed at an early stage. The proposed approach adopts Model Driven Engineering MDE. It starts from UML specification annotated with the recent profile for the Modeling and Analysis of Real Time Embedded systems MARTE. Following refinement strategy, transformation rules allow the finding of a feasible schedule that satisfies timing constraints and defining where tasks will be implemented. The overall approach is experimented on the design of a football player robot application.},
  keywords={},
  doi={10.1109/AICCSA.2010.5586936},
  ISSN={2161-5330},
  month={May},}
@INPROCEEDINGS{331957,
  author={von Mayrhauser, A. and Mraz, R. and Walls, J. and Ocken, P.},
  booktitle={Proceedings 1994 IEEE International Conference on Computer Design: VLSI in Computers and Processors}, 
  title={Domain based testing: increasing test case reuse}, 
  year={1994},
  volume={},
  number={},
  pages={484-491},
  abstract={Domain based testing (DBT) is a test generation method based on two concepts from software reuse, domain analysis and domain modeling. We applied DBT to command-based systems where the domain model represents the syntax and semantics of the command language. The domain model drives the generation of test cases. The test generation process consists of three stages: scripting; command template generation; and parameter value selection. Because it is based on ideas from software reuse, DBT also provides a good structure for test case reuse. Production use of the DBT tool Sleuth to generate system tests for an automated robot tape library confirms that DBT provides a wide variety of test case reuse scenarios.<>},
  keywords={},
  doi={10.1109/ICCD.1994.331957},
  ISSN={},
  month={Oct},}@INPROCEEDINGS{10190415,
  author={Nguyen, Minh and Hochgeschwender, Nico and Wrede, Sebastian},
  booktitle={2023 IEEE/ACM 5th International Workshop on Robotics Software Engineering (RoSE)}, 
  title={An Analysis of Behaviour-Driven Requirement Specification for Robotic Competitions}, 
  year={2023},
  volume={},
  number={},
  pages={17-24},
  abstract={Recent scientific and technological advances have enabled robotic applications in various challenging domains, which motivates means to better represent and manage the subsequent increase in number and complexity of requirements. We look into rulebooks of robotic competitions and benchmarks as one publicly available source of requirements and acceptance criteria for evaluating robots’ performance. From our analysis, we derive a Feature Model containing common elements that recur in descriptions of different robotic competitions. We argue how these features can be used to express requirements and acceptance criteria for robotic applications, within the context of the Behaviour-Driven Development (BDD) paradigm. This can serve as a mean not only to analyse and manage requirements, but also to introduce automation into verifying and validating requirements in robotics.},
  keywords={},
  doi={10.1109/RoSE59155.2023.00008},
  ISSN={},
  month={May},}@INPROCEEDINGS{9568380,
  author={Salmon, Loic and Pillain, Pierre-Yves and Guillou, Goulven and Babau, Jean-Philippe},
  booktitle={2021 Forum on specification & Design Languages (FDL)}, 
  title={CARES, a framework for CPS simulation : application to autonomous underwater vehicle navigation function}, 
  year={2021},
  volume={},
  number={},
  pages={01-08},
  abstract={One key objective of Cyber-Physical System (CPS) simulation is to evaluate different CPS configurations regarding a certain user objective. First, simulation of CPS necessitates frameworks to handle heterogeneity of CPS components (the software and hardware system control, the behavior of the CPS itself and its physical environment). Then, to build simulators, designers use paradigms like FMI (Functional Mock-Up Interface) that proposes a data-driven generic interface facilitating the integration of heterogeneous models. However, in order to facilitate simulation configuration, an approach is required to drive modeling of parametric features and operational conditions. In this paper, we present CARES, a component-based and model-driven approach to facilitate CPS simulation. CARES is applied to evaluate an Autonomous Underwater Vehicle (AUV) navigation function by simulation. The proposed models integrate both the principles of a generic simulation (integration of Component Based Software Engineering CBSE concepts and FMI paradigm) and domain specific aspects through a component-based architecture style. From a design model, a code generator builds the structural (Java or C++) code of the simulator. The generated code relies on a given run-time library for its execution and its structure facilitates integration of domain-specific code. The experiments show the effectiveness of the approach to build simulators for evaluation of different AUV configurations.},
  keywords={},
  doi={10.1109/FDL53530.2021.9568380},
  ISSN={1636-9874},
  month={Sep.},}@INPROCEEDINGS{9827193,
  author={Muralidhara, Darshan Balaganchi and Gehring, Ottmar and Bock, Hans Georg and Wirsching, Leonard},
  booktitle={2022 IEEE Intelligent Vehicles Symposium (IV)}, 
  title={Scenario Analysis for Optimized Trajectories of a Truck-Trailer Model utilizing Coupled Dynamics}, 
  year={2022},
  volume={},
  number={},
  pages={708-717},
  abstract={Autonomous or semi-autonomous driving constitutes an important business case to the trucking industry. To realize its full potential it is mandatory to enable autonomous or semi-autonomous driving especially in challenging traffic situations such as roundabouts and sharp bends. As a step towards this goal, the main objective of this paper is to investigate the optimal trajectory planning of heavy-duty long-haul trucks for real-world applications with coupled longitudinal and lateral dynamics of the truck-trailer system. We present a detailed dynamical model and propose objectives that optimize with respect to safety, and to find a suitable compromise between efficiency and driving performances. Using these ingredients, we generate trajectories for maneuvering an articulated vehicle, subject to realistic constraints on narrow roads. We use Bock’s Direct Multiple Shooting method in combination with structure-exploiting iterative optimization methods, efficiently implemented in the software package MUSCOD-II, to generate fast, reliable, and feasible solutions for the complex and highly nonlinear problem. We analyze the solutions with differently weighted objectives for a realistic scenario, maintaining safety, and building compromises between energy efficiency, driving quality, and speed maintenance that reflects time efficiency.},
  keywords={},
  doi={10.1109/IV51971.2022.9827193},
  ISSN={},
  month={June},}@INPROCEEDINGS{10173900,
  author={Du, Dehui and Li, Bo and Zheng, Chenghang and Zhang, Xinyuan},
  booktitle={2023 IEEE/ACM 45th International Conference on Software Engineering: New Ideas and Emerging Results (ICSE-NIER)}, 
  title={A Novel and Pragmatic Scenario Modeling Framework with Verification-in-the-loop for Autonomous Driving Systems}, 
  year={2023},
  volume={},
  number={},
  pages={84-89},
  abstract={Scenario modeling for Autonomous Driving Systems (ADS) enables scenario-based simulation and verification which are critical for the development of safe ADS. However, with the increasing complexity and uncertainty of ADS, it becomes increasingly challenging to manually model driving scenarios and conduct verification analysis. To tackle these challenges, we propose a novel and pragmatic framework for scenario modeling, simulation and verification. The novelty is that it’s a verification-in-the-loop scenario modeling framework. The scenario modeling language with formal semantics is proposed based on the domain knowledge of ADS. It facilitates scenario verification to analyze the safety of scenario models. Moreover, the scenario simulation is implemented based on the scenario executor. Compared with existing works, our framework can simplify the description of scenarios in a non-programming, user-friendly manner, model stochastic behavior of vehicles, support safe verification of scenario models with UPPAAL-SMC and generate executable scenario in some open-source simulators such as CARLA. To preliminarily demonstrate the effectiveness and feasibility of our approach, we build a prototype tool and apply our approach in several typical scenarios for ADS.},
  keywords={},
  doi={10.1109/ICSE-NIER58687.2023.00021},
  ISSN={2832-7632},
  month={May},}@INPROCEEDINGS{6653888,
  author={Holzmüller-Laue, S. and Göde, B. and Thurow, K.},
  booktitle={2013 IEEE International Conference on Automation Science and Engineering (CASE)}, 
  title={Model-driven complex workflow automation for laboratories}, 
  year={2013},
  volume={},
  number={},
  pages={758-763},
  abstract={This article addresses the potential of model-driven workflow automation in R&D laboratories of life sciences. The presented approach takes up the notation standard BPMN 2.0 published in 2011 as the graphical modeling and automation language for any business processes. The challenges and goals of the work presented here focus the overall control integration of activities and subprocesses executed by automation systems as well as manually. For it BPM-based generic automation platforms will be evaluated by representative examples using several information systems, hierarchical automation components up to complex laboratory robot solutions. It can be summarized, that the modern BPM methods and tools open a new efficient way for overall process automation in hybrid heterogeneous systems environments, not only in case of life science automation. The BPM approach has been confirmed as an efficient method of cross control and integration to use mobile transfer robots for connecting automation islands in future labs.},
  keywords={},
  doi={10.1109/CoASE.2013.6653888},
  ISSN={2161-8089},
  month={Aug},}@INPROCEEDINGS{9592382,
  author={Shi, Yize and Lu, Chengjie and Zhang, Man and Zhang, Huihui and Yue, Tao and Ali, Shaukat},
  booktitle={2021 ACM/IEEE 24th International Conference on Model Driven Engineering Languages and Systems (MODELS)}, 
  title={Restricted Natural Language and Model-based Adaptive Test Generation for Autonomous Driving}, 
  year={2021},
  volume={},
  number={},
  pages={101-111},
  abstract={With the aim to reduce car accidents, autonomous driving attracted a lot of attentions these years. However, recently reported crashes indicate that this goal is far from being achieved. Hence, cost-effective testing of autonomous driving systems (ADSs) has become a prominent research topic. The classical model-based testing (MBT), i.e., generating test cases from test models followed by executing the test cases, is ineffective for testing ADSs, mainly because of the constant exposure to ever-changing operating environments, and uncertain internal behaviors due to employed AI techniques. Thus, MBT must be adaptive to guide test case generation based on test execution results in a step-wise manner. To this end, we propose a natural language and model-based approach, named LiveTCM, to automatically execute and generate test case specifications (TCSs) by interacting with an ADS under test and its environment. LiveTCM is evaluated with an open-source ADS and two test generation strategies: Deep Q-Network (DQN)-based and Random. Results show that LiveTCM with DQN can generate TCSs with 56 steps on average in 60 seconds, leading to 6.4 test oracle violations and covering 14 APIs per TCS on average.},
  keywords={},
  doi={10.1109/MODELS50736.2021.00019},
  ISSN={},
  month={Oct},}@INPROCEEDINGS{7194319,
  author={Klarl, Annabelle},
  booktitle={2015 IEEE 24th International Conference on Enabling Technologies: Infrastructure for Collaborative Enterprises}, 
  title={Engineering Self-Adaptive Systems with the Role-Based Architecture of Helena}, 
  year={2015},
  volume={},
  number={},
  pages={3-8},
  abstract={When engineering self-adaptive systems, separating adaptation and application logic was proven beneficial to avoid interdependencies between adaptation strategy and standard behaviour. Several engineering methods support this separation in different phases of the classical development process, but none addresses it consistently in all of them. We propose a holistic model-driven engineering process with systematic transitions between all phases to develop self-adaptive systems. Adaptation is achieved by changing the behavioral mode of a component in response to perceptions. We realize behavioral modes by roles which a component can dynamically adopt. For specification, we propose adaptation automata which allow to specify complex adaptation behaviour by hierarchical structure and history of states. Furthermore, we propose the HELENA Adaptation Manager pattern to derive a role-based model from a specification. Due to its formal foundation, the model can be analyzed with Spin and executed with the Java framework jHelena.},
  keywords={},
  doi={10.1109/WETICE.2015.32},
  ISSN={1524-4547},
  month={June},}@ARTICLE{9646271,
  author={Xu, Shaobing and Zidek, Robert and Cao, Zhong and Lu, Pingping and Wang, Xinpeng and Li, Boqi and Peng, Huei},
  journal={IEEE Transactions on Systems, Man, and Cybernetics: Systems}, 
  title={System and Experiments of Model-Driven Motion Planning and Control for Autonomous Vehicles}, 
  year={2022},
  volume={52},
  number={9},
  pages={5975-5988},
  abstract={This article presents a model-based motion planning and control system for autonomous vehicles and its experimental validation. The system consists of four modules: 1) global routing; 2) behavior planner; 3) local trajectory generation; and 4) trajectory tracking. The algorithm and software of each module are detailed, including a behavior planner with unified models to handle typical scenarios in both highway and urban driving, a deterministic sampling algorithm for robust responsive trajectory generation, and a dynamics-and-delay-aware preview algorithm to achieve accurate trajectory tracking. The developed system is implemented and tested at the Mcity test facility with a full-size automated car and a dozen of challenging traffic scenarios.},
  keywords={},
  doi={10.1109/TSMC.2021.3131141},
  ISSN={2168-2232},
  month={Sep.},}@INPROCEEDINGS{8867198,
  author={PHAM, Hoang Anh and SORIANO, Thierry and NGO, Van Hien},
  booktitle={OCEANS 2019 - Marseille}, 
  title={Applying AADL to realize embedded control systems for coordination of multiple low-cost underwater drones}, 
  year={2019},
  volume={},
  number={},
  pages={1-7},
  abstract={The goal of this study is to realize a component architecture of embedded control systems for coordination of UUV based on a Model Driven Engineering approach. We firstly have studied in end-to-end flow latency and faults for an embedded system of UUV in scenario-case coordinated control of multiple UUVs. A basic declarative model and its instance are then implemented to illustrate a scheduling analysis of the system instance. The abstraction of the complex embedded system is represented in consideration of AADL system, process, and device components. Following on this representation, the run-time composition of all elements, allocate software to hardware resources, and assign values to properties of the elements are detailed for analyzing and creating an instance of coordination system. Specially, it is taken into account for inspecting and developing a controller of low-cost underwater drone such as BlueROV, an open-source platform for a research prototype and educational purposes.},
  keywords={},
  doi={10.1109/OCEANSE.2019.8867198},
  ISSN={},
  month={June},}@INPROCEEDINGS{6068353,
  author={Garces, Kelly and Deantoni, Julien and Mallet, Frederic},
  booktitle={2011 37th EUROMICRO Conference on Software Engineering and Advanced Applications}, 
  title={A Model-Based Approach for Reconciliation of Polychronous Execution Traces}, 
  year={2011},
  volume={},
  number={},
  pages={259-266},
  abstract={Embedded systems are very difficult to design and debug because of the limited access to the device itself. Therefore, debugging usually requires to instrument the code so as to produce execution traces that are then monitored from a base station. Such an intrusive method has a direct impact on performances. In case of multiple interacting embedded targets the problem is even more severe and is not limited to computations but also spreads to communications. To reduce the communication overhead, we propose an approach in which unsynchronized traces from several targets are reconciled a posteriori. Since each target has its own time base without a built-in clock synchronization protocol, our approach requires a multi-clock reconciliation specification. This paper describes our model-based proposal developed during the ANR project RT-Simex. The different steps of the reconciliation are illustrated on a simple case-study used in the project, a terrestrial robot controlled in position.},
  keywords={},
  doi={10.1109/SEAA.2011.47},
  ISSN={2376-9505},
  month={Aug},}@INPROCEEDINGS{7005358,
  author={Pohlmann, Uwe and Trsek, Henning and Dürkop, Lars and Dziwok, Stefan and Oestersötebier, Felix},
  booktitle={Proceedings of the 2014 IEEE Emerging Technology and Factory Automation (ETFA)}, 
  title={Application of an intelligent network architecture on a cooperative cyber-physical system: An experience report}, 
  year={2014},
  volume={},
  number={},
  pages={1-6},
  abstract={Cooperative cyber-physical systems (CCPS) are driven by the tight coordination between computational components, physical sensors and actuators, and the interaction with each other over system bounds. The software development of CCPS is getting more complex because of the tight integration, heterogeneous technologies, as well as safety and timing requirements. Therefore, new engineering approaches, such as model-driven development methods, are required, along with communication architectures with self-* capabilities. Both will support the developer in specifying such a system effectively and efficiently. However, the application of such techniques for the development of CCPS has not been addressed sufficiently so far. This paper presents an experience report of developing a cooperative delta-robot system that juggles a ball without a central control or camera system. For the development, an intelligent network architecture and model-driven development method for CCPS are applied.},
  keywords={},
  doi={10.1109/ETFA.2014.7005358},
  ISSN={1946-0759},
  month={Sep.},}@INPROCEEDINGS{10148719,
  author={Kluge, Tim},
  booktitle={2020 IEEE/ACM 15th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS)}, 
  title={A Role-Based Architecture for Self-Adaptive Cyber-Physical Systems}, 
  year={2020},
  volume={},
  number={},
  pages={120-124},
  abstract={Today's computing world features a growing number of cyber-physical systems that require the cooperation of many physical devices. Examples include autonomous cars and co-working robots, which are expected to appropriately adapt to any possible context they find themselves in (e.g. the presence of a nearby human). However, the controlling software continues to be developed using established object-oriented modelling techniques like UML, which do not natively possess a notion of context and thus may introduce accidental complexity. With increasing complexity, the probability of the introduction of software errors rises, which can have fatal consequences in cyber-physical systems. To address this, we envision a model-driven architecture for self-adaptive cyber-physical systems that explicitly models structured context. Entities are modelled as message-passing parallel processes and can play roles in specific contexts, which dynamically alter their behaviour and relationships with other parts of the system. Since the planning of complex adaptations can be cumbersome in real-world scenarios, we envision an intuitive formulation of adaptations as graph rewriting rules on the context model. This paper discusses the current state of research and identifies open research challenges. Based on this, the envisioned architecture as well as an evaluation strategy are presented.},
  keywords={},
  doi={10.1145/3387939.3391601},
  ISSN={2157-2321},
  month={May},}@INPROCEEDINGS{7064608,
  author={Ramaswamy, Arunkumar and Monsuez, Bruno and Tapus, Adriana},
  booktitle={2014 13th International Conference on Control Automation Robotics & Vision (ICARCV)}, 
  title={Architecture modeling and analysis language for designing robotic architectures}, 
  year={2014},
  volume={},
  number={},
  pages={1911-1916},
  abstract={In recent times, researchers in robotics have arrived at a consensus that there is no single efficient architecture or framework that satisfies all aspects of robotic system design. A majority of robotic architectures currently in use are developed in-house to meet the specific objectives of the research group. However, these frameworks have been designed in an ad-hoc manner and thus restricts reusability and scalability. In this paper, we propose an architecture description language `Architecture Modeling and Analysis Language (AMAL)' that homogenizes the framework development process in a formal way. AMAL is a radical approach that enables framework development based on custom requirements or by integrating existing heterogeneous architectural paradigms. The Open Semantics Framework in AMAL facilitates domain knowledge integration and promotes separation of concerns to build complex systems. We also position our approach in the SafeRobots framework, a model-driven software development tool-chain for robotics.},
  keywords={},
  doi={10.1109/ICARCV.2014.7064608},
  ISSN={},
  month={Dec},}@INPROCEEDINGS{10190421,
  author={Garcia, Nadia Hammoudeh and Deshpande, Harshavardhan and Wu, Ruichao and Kahl, Björn and Wortmann, Andreas},
  booktitle={2023 IEEE/ACM 5th International Workshop on Robotics Software Engineering (RoSE)}, 
  title={Lifting ROS to Model-Driven Development: Lessons Learned from a bottom-up approach}, 
  year={2023},
  volume={},
  number={},
  pages={31-36},
  abstract={The benefits of using model-based technologies are well proven in different sectors. However, in robotics, where the dominant framework is one whose nature is to create the code by hand, MDD approaches are struggling to gain a foothold. Our approach is distinctly different from traditional MDD solutions, we have created models and tools with a bottom-up perspective, i.e. analyzing “ everyday” code and encapsulating this existing code in models. In this paper we present the lessons learned from (1) designing the models to encapsulate ROS hand-written code, (2) creating tools to ease the production and debugging of complex systems using the models, and (3) applying them to real use cases. Through this work we have identified in which situations it is worth using model-based technologies and in which situations the traditional approach is more meaningful. Our aim is to give a broad view of our conclusions and inspire the design of new model-based tools for the assistance of roboticists.},
  keywords={},
  doi={10.1109/RoSE59155.2023.00010},
  ISSN={},
  month={May},}@INPROCEEDINGS{6144886,
  author={Mardian, Rizki and Sekiyama, Kosuke and Fukuda, Toshio},
  booktitle={The 5th International Conference on Automation, Robotics and Applications}, 
  title={Multiple entities interaction model through DNA based Petri Net}, 
  year={2011},
  volume={},
  number={},
  pages={226-231},
  abstract={High-level control is an important part in developing an autonomous molecular robot made from DNA. In this paper, we report the design of DNA-based coordination model driven by multiple entities interaction to coordinate the behavior of numerous DNA agents. First, the implementation of DNA operator will be introduced. We utilize DNA Strand Displacement as the main and the only computational mechanism. Second, the equality of this operator with Petri Net model will be discussed. We show how Petri Net can be carried by DNA computation. Third, for our ultimate goal, we introduce the strategy of designing interaction model through this DNA-based Petri Net, by employing simple assembling task scenario. The correctness of the design is inferred by the result from software-based simulation.},
  keywords={},
  doi={10.1109/ICARA.2011.6144886},
  ISSN={},
  month={Dec},}@INPROCEEDINGS{4494428,
  author={Tsai, W. T. and Huang, Qian and Sun, Xin},
  booktitle={41st Annual Simulation Symposium (anss-41 2008)}, 
  title={A Collaborative Service-Oriented Simulation Framework with Microsoft Robotic Studio®}, 
  year={2008},
  volume={},
  number={},
  pages={263-270},
  abstract={Service-Oriented Architecture (SOA) had received significant attention recently. The concepts that service can be discovered at runtime and application can be composed via service discovery bring great flexibility to application development. SOA can be incorporated into embedded system design, thus improve the reusability and extensibility of embedded applications. Microsoft Robotics Studio (MSRS) is a significant initiative in applying SOA to embedded systems and SOA simulation can play an important role in the robotics application development and verification. SOA simulation differs from traditional simulation as it emphasizes on reusability, collaborative behaviors and its unique model-driven development, this paper proposes a collaborative SOA simulation framework with MSRS environment.},
  keywords={},
  doi={10.1109/ANSS-41.2008.32},
  ISSN={2331-107X},
  month={April},}@INPROCEEDINGS{8906937,
  author={Hammoudeh Garcia, Nadia and Deval, Ludovic and Lüdtke, Mathias and Santos, Andre and Kahl, Björn and Bordignon, Mirko},
  booktitle={2019 ACM/IEEE 22nd International Conference on Model Driven Engineering Languages and Systems (MODELS)}, 
  title={Bootstrapping MDE Development from ROS Manual Code - Part 2: Model Generation}, 
  year={2019},
  volume={},
  number={},
  pages={95-105},
  abstract={In principle, Model-Driven Engineering (MDE) addresses central aspects of robotics software development. Domain experts could leverage the expressiveness of models; implementation details over different hardware could be handled by automatic code generation. In practice, most evidence points to manual code development as the norm, despite several MDE efforts in robotics. Possible reasons for this disconnect are the wide ranges of applications and target platforms making all-encompassing MDE IDEs hard to develop and maintain, with developers reverting to writing code manually. Acknowledging this, and given the opportunity to leverage a large corpus of open-source software widely adopted by the robotics community, we pursue modeling as a complement, rather than an alternative, to manually written code. Our previous work introduced metamodels to describe components, their interactions, and their resulting composition, as inspired by, but not limited to, the de-facto standard Robot Operating System (ROS). In this paper we put such metamodels into use through two contributions. First, we automate the generation of models from manually written artifacts through extraction from source code and runtime system monitoring. Second, we make available an easy-to-use web infrastructure to perform the extraction, together with a growing database of models so generated. Our aim with this tooling, publicly available both as-a-service and as source code, is to lower the MDE barrier for practitioners and leverage models to 1) improve the understanding of manually written code; 2) perform correctness checks; and 3) systematize the definition and adoption of best practices through large-scale generation of models from existing code. A comprehensive example is provided as a walk-through for robotics software practitioners.},
  keywords={},
  doi={10.1109/MODELS.2019.00-11},
  ISSN={},
  month={Sep.},}@INPROCEEDINGS{7320353,
  author={Estivill-Castro, Vladimir and Hexel, René},
  booktitle={2015 International Conference on Evaluation of Novel Approaches to Software Engineering (ENASE)}, 
  title={Simple, not simplistic the middleware of behaviour models}, 
  year={2015},
  volume={},
  number={},
  pages={189-196},
  abstract={There are many areas where software components must interact witch each other and where middleware provides the appropriate benefits of robustness, decoupling, and modularisation. However, there is a potential performance overhead that, for autonomous robotic and embedded systems, may be critical. Proposals for robotic middleware continue to emerge, but surprisingly, they repeatedly follow the publish-subscriber model. There are several disadvantages to the push paradigm of the publisher-subscriber approach; in particular, its implication of a closer coupling where the subscriber must be active and able to keep up with the pace of events. We propose an alternative pull model, where consumers of messages handle information at their own time. We show that our proposal aligns with fundamental, time-triggered design principles, and produces simple module communication that reduces thread management and can enable rapid prototyping, validation, and formal verification.},
  keywords={},
  doi={},
  ISSN={},
  month={April},}@INPROCEEDINGS{7030977,
  author={El-Kassas, Wafaa S. and Abdullah, Bassem A. and Yousef, Ahmed H. and Wahba, Ayman},
  booktitle={2014 9th International Conference on Computer Engineering & Systems (ICCES)}, 
  title={ICPMD: Integrated cross-platform mobile development solution}, 
  year={2014},
  volume={},
  number={},
  pages={307-317},
  abstract={In these days, smartphones become much more used than the personal computers because of the various categories of applications downloadable from the store. The vendors of smartphones support different platforms hence to reach as many users as possible, the developer has to develop the same application for all these platforms using the different tools and programming languages provided by each platform vendor. Therefore the cross-platform mobile applications development solutions were introduced to develop the application once and run it everywhere. The cross-platform solutions use different approaches for native development such as cross-compilation, Model-Driven Development …etc. None of these approaches claim that it provides a complete solution as they are still under research and development. This paper introduces a new integrated cross-platform mobile development solution that merges between different approaches to benefit from the advantages and minimize the drawbacks of each approach. The main contributions include: explore the approaches used in designing the new solution, explain the research methodology and the new solution architecture along with the implementation, and evaluate the limitations of the new proposed architecture and implementation compared to known solutions. The results show substantial improvement over existing solutions.},
  keywords={},
  doi={10.1109/ICCES.2014.7030977},
  ISSN={},
  month={Dec},}@INPROCEEDINGS{9474426,
  author={Martinez, Jabier and Ruiz, Alejandra and Radermacher, Ansgar and Tonetta, Stefano},
  booktitle={2021 IEEE/ACM 3rd International Workshop on Robotics Software Engineering (RoSE)}, 
  title={Assumptions and Guarantees for Composable Models in Papyrus for Robotics}, 
  year={2021},
  volume={},
  number={},
  pages={1-4},
  abstract={The separation of concerns helps to manage the intrinsic complexity of defining robotics components, systems and missions. This separation of concerns is supported by the Rob-MoSys modelling approach addressing both the modelling needs of the robotics domain and identifying the involved stakeholders and required expertise. In this multi-stakeholder context, there are pressing concerns about non-functional characteristics including safety aspects (e.g., collaborative robots, increasing risks to humans and the environment where robotic systems operate). It is of special interest to explicitly establish the non-functional assumptions and guarantees. This assures that the their validity can be automatically evaluated, in particular during the definition of a system as a composition of several component definitions. We present how we extended one of the RobMoSys implementations, Papyrus for Robotics, for contracts modelling and assertions validation. Notably this includes the meta-modelling decisions to allow extensibility for assertion languages.},
  keywords={},
  doi={10.1109/RoSE52553.2021.00007},
  ISSN={},
  month={June},}@INPROCEEDINGS{8769017,
  author={Papakonstantinou, Nikolaos and Bashir, Ahmed Z. and O’Halloran, Bryan and Bossuyt, Douglas L. Van},
  booktitle={2019 Annual Reliability and Maintainability Symposium (RAMS)}, 
  title={Early Assessment of Drone Fleet Defence in Depth Capabilities for Mission Success}, 
  year={2019},
  volume={},
  number={},
  pages={1-7},
  abstract={Advancements in the domain of artificial intelligence, safety management, and on-board fault tolerance have led to autonomous devices to be considered as a key element for future remote defence and peaceful missions. Drones - also known as autonomous or unmanned vehicles - with different capabilities and features - can be organized in a fleet and the fleet can be organized in a way that will increase the survivability of the drones and improve mission success. This can be accomplished by balancing system effectiveness design parameters such as endurance, communications, sensor fusion, domain awareness, area coverage rates and human operator interaction against mission costs.},
  keywords={},
  doi={10.1109/RAMS.2019.8769017},
  ISSN={2577-0993},
  month={Jan},}@INPROCEEDINGS{6458567,
  author={Sabraoui, Ayoub and Koutbi, Mohammed El and Khriss, Ismail},
  booktitle={2012 IEEE International Conference on Complex Systems (ICCS)}, 
  title={GUI code generation for Android applications using a MDA approach}, 
  year={2012},
  volume={},
  number={},
  pages={1-6},
  abstract={Developing applications for mobile platforms is a compound task, due to variability of mobile OSs and the number of different devices that need to be supported. Model-Driven Architecture (MDA) approach could provide a possible solution to provide an automated way to generate a Graphical User Interface (GUI) for such applications. In this paper, we propose an approach based on MDA, to generate GUI for mobile applications on smartphones. The adopted approach consists of three main steps (i) analyzing and modeling the GUI under UML; (ii) transforming the obtained diagrams to a simplified XMI schema using JDOM API; and (iii) generating the GUI based on MDA. Our method has the advantages to generate automatically GUI for several platforms, and gives a graphical way for designing in UML.},
  keywords={},
  doi={10.1109/ICoCS.2012.6458567},
  ISSN={},
  month={Nov},}@INPROCEEDINGS{7016598,
  author={Lachgar, Mohamed and Abdali, Abdelmounaïm},
  booktitle={2014 Third IEEE International Colloquium in Information Science and Technology (CIST)}, 
  title={Generating Android graphical user interfaces using an MDA approach}, 
  year={2014},
  volume={},
  number={},
  pages={80-85},
  abstract={Due to the large number and variety of mobile technologies and web based-components, developing the same application for these different platforms becomes a tedious task. The Model Driven Architecture (MDA) approach aims to provide an easy and efficient practical solution for developing a cross-platform application. In this work, we propose a new approach to the design of the user interface for mobile applications, which we apply to the Android platform. This approach will be generalized for all mobile platforms and web based components, by defining a language for the development of graphical interfaces, the Technology Neutral DSL (Domain-specific language) intended to be cross-compiled to generate native code for a diversity of platforms.},
  keywords={},
  doi={10.1109/CIST.2014.7016598},
  ISSN={2327-1884},
  month={Oct},}@INPROCEEDINGS{10186629,
  author={Shao, Wenbo and Li, Jun and Wang, Hong},
  booktitle={2023 IEEE Intelligent Vehicles Symposium (IV)}, 
  title={Self-Aware Trajectory Prediction for Safe Autonomous Driving}, 
  year={2023},
  volume={},
  number={},
  pages={1-8},
  abstract={Trajectory prediction is one of the key components of the autonomous driving software stack. Accurate prediction for the future movement of surrounding traffic participants is an important prerequisite for ensuring the driving efficiency and safety of intelligent vehicles. Trajectory prediction algorithms based on artificial intelligence have been widely studied and applied in recent years and have achieved remarkable results. However, complex artificial intelligence models are uncertain and difficult to explain, so they may face unintended failures when applied in the real world. In this paper, a self-aware trajectory prediction method is proposed. By introducing a self-awareness module and a two-stage training process, the original trajectory prediction module's performance is estimated online, to facilitate the system to deal with the possible scenario of insufficient prediction function in time, and create conditions for the realization of safe and reliable autonomous driving. Comprehensive experiments and analysis are performed, and the proposed method performed well in terms of self-awareness, memory footprint, and real-time performance, showing that it may serve as a promising paradigm for safe autonomous driving.},
  keywords={},
  doi={10.1109/IV55152.2023.10186629},
  ISSN={2642-7214},
  month={June},}
@INPROCEEDINGS{4127115,
  author={Nanyue, Yang and Hanwu, He and Yan, Lou and Yongming, Lu},
  booktitle={2006 7th International Conference on Computer-Aided Industrial Design and Conceptual Design}, 
  title={Modeling of virtual traffic environment for driving simulator}, 
  year={2006},
  volume={},
  number={},
  pages={1-5},
  abstract={Viewing scene system is an important component for driving simulator. Its authenticity can give user sense of reality and immersion. Aiming at overcoming the shortcomings of the previous virtual traffic environment model, a new method is presented in this paper, i.e. using software 3dsMAX to construct 3D entity, then transform to 0.3ds format and import to Eon Studio for simulation. The finished virtual traffic environment model not only includes different kinds of road, such as road of city, road of mountain, road of village, but also can reflect time change a day and variation of weather. Far scene and close-by scene in the model can give driver a distinct vision sense. Furthermore, the virtual vehicles have dynamic intelligent behavior. Finally, this virtual traffic environment was applied to the autonomous virtual vehicle vision perception behavior system (AW-VPB System) for simulation test. The result was satisfying and proved that the virtual traffic environment can provide a better viewing scene for driving simulator},
  keywords={},
  doi={10.1109/CAIDCD.2006.329334},
  ISSN={},
  month={Nov},}@INPROCEEDINGS{7323096,
  author={Andrews, Anneliese and Abdelgawad, Mahmoud and Gario, Ahmed},
  booktitle={2015 3rd International Conference on Model-Driven Engineering and Software Development (MODELSWARD)}, 
  title={Towards world model-based test generation in autonomous systems}, 
  year={2015},
  volume={},
  number={},
  pages={1-12},
  abstract={This paper describes a model-based test generation approach for testing autonomous systems interacting with their environment (i.e., world). Unlike other approaches that assume a static world with attributes and values, we present and test the world dynamically. We build the world model in two steps: a structural model that constructs environmental factors (i.e., actors) and a behavioral model that describes actors' behaviors over a certain landscape (i.e., snippet). Abstract world behavioral test cases (AWBTCs) are then generated by covering the behavioral model using graph coverage criteria. The world model-based test generation technique (WMBTG) is used on an autonomous ground vehicle (AGV).},
  keywords={},
  doi={},
  ISSN={},
  month={Feb},}@INPROCEEDINGS{6209016,
  author={Balakrishnan, Gokul and Hiremath, Somashekhar S},
  booktitle={2012 IEEE 10th International Symposium on Applied Machine Intelligence and Informatics (SAMI)}, 
  title={Autonomous sensor networks for process monitoring and automation}, 
  year={2012},
  volume={},
  number={},
  pages={47-52},
  abstract={This paper makes a study on the design and development features of Self Organizing Sensor Networks for Automation and Process Monitoring. The research project `Multifunk' aims at development and prototypical implementation of software and hardware components for monitoring of industrial production processes using model-driven development, a service oriented architecture, network self-organization and wireless components. Presented in this paper are the results achieved in design of the system architecture, implementation of an adequate transport protocol, compliance to standards as well as a prototypical use case.},
  keywords={},
  doi={10.1109/SAMI.2012.6209016},
  ISSN={},
  month={Jan},}@INPROCEEDINGS{9201644,
  author={Deliparaschos, Kyriakos M. and Santha, Gergely and Fragonara, Luca Zanotti and Petrunin, Ivan and Zolotas, Argyrios C. and Tsourdos, Antonios},
  booktitle={2020 International Conference Mechatronic Systems and Materials (MSM)}, 
  title={A Preliminary Investigation of an Autonomous Vehicle Validation Infrastructure for Smart Cities}, 
  year={2020},
  volume={},
  number={},
  pages={1-5},
  abstract={The research and development of autonomous vehicle has entered the era of commercialization. While the vehicle self-driving technology has been growing rapidly, the validation for autonomous vehicle in terms of driving model, human factor model and traffic model is still maturing. Most of previous infrastructures are mainly focused on validation of those three models separately resorting either on real driving test at physical infrastructure or software simulation in virtualized infrastructure. However, neither the real driving test can cover all possible scenarios of autonomous driving and human factors, nor the virtualized software simulation can generate a feasible model for practical on/off-road driving. Furthermore, future autonomous transport in smart cities requires comprehensive validation. In order for autonomous vehicles to meet the autonomous transport in such complex traffic environment, an integrated testing and simulation infrastructure has been built targeting the systematic validation for autonomous vehicles: the Multi-User Environment for Autonomous Vehicle Innovation (MUEAVI). A preliminary investigation of a new autonomous vehicle validation infrastructure that can serve a multitude of research projects for smart city is presented.},
  keywords={},
  doi={10.1109/MSM49833.2020.9201644},
  ISSN={},
  month={July},}
